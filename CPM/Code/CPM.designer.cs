#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPM.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CPM")]
	public partial class CPMmodel : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClaimDetail(ClaimDetail instance);
    partial void UpdateClaimDetail(ClaimDetail instance);
    partial void DeleteClaimDetail(ClaimDetail instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertCustomerLocation(CustomerLocation instance);
    partial void UpdateCustomerLocation(CustomerLocation instance);
    partial void DeleteCustomerLocation(CustomerLocation instance);
    partial void InsertERPCustomerLocation(ERPCustomerLocation instance);
    partial void UpdateERPCustomerLocation(ERPCustomerLocation instance);
    partial void DeleteERPCustomerLocation(ERPCustomerLocation instance);
    partial void InsertERPCustomerOrg(ERPCustomerOrg instance);
    partial void UpdateERPCustomerOrg(ERPCustomerOrg instance);
    partial void DeleteERPCustomerOrg(ERPCustomerOrg instance);
    partial void InsertERPMasterBrand(ERPMasterBrand instance);
    partial void UpdateERPMasterBrand(ERPMasterBrand instance);
    partial void DeleteERPMasterBrand(ERPMasterBrand instance);
    partial void InsertERPMasterInventory(ERPMasterInventory instance);
    partial void UpdateERPMasterInventory(ERPMasterInventory instance);
    partial void DeleteERPMasterInventory(ERPMasterInventory instance);
    partial void InsertERPUser(ERPUser instance);
    partial void UpdateERPUser(ERPUser instance);
    partial void DeleteERPUser(ERPUser instance);
    partial void InsertFileDetail(FileDetail instance);
    partial void UpdateFileDetail(FileDetail instance);
    partial void DeleteFileDetail(FileDetail instance);
    partial void InsertFileHeader(FileHeader instance);
    partial void UpdateFileHeader(FileHeader instance);
    partial void DeleteFileHeader(FileHeader instance);
    partial void InsertMasterActivity(MasterActivity instance);
    partial void UpdateMasterActivity(MasterActivity instance);
    partial void DeleteMasterActivity(MasterActivity instance);
    partial void InsertMasterClaimStatus(MasterClaimStatus instance);
    partial void UpdateMasterClaimStatus(MasterClaimStatus instance);
    partial void DeleteMasterClaimStatus(MasterClaimStatus instance);
    partial void InsertMasterDefect(MasterDefect instance);
    partial void UpdateMasterDefect(MasterDefect instance);
    partial void DeleteMasterDefect(MasterDefect instance);
    partial void InsertMasterFileTypeDetail(MasterFileTypeDetail instance);
    partial void UpdateMasterFileTypeDetail(MasterFileTypeDetail instance);
    partial void DeleteMasterFileTypeDetail(MasterFileTypeDetail instance);
    partial void InsertMasterFileTypeHeader(MasterFileTypeHeader instance);
    partial void UpdateMasterFileTypeHeader(MasterFileTypeHeader instance);
    partial void DeleteMasterFileTypeHeader(MasterFileTypeHeader instance);
    partial void InsertMasterInventory(MasterInventory instance);
    partial void UpdateMasterInventory(MasterInventory instance);
    partial void DeleteMasterInventory(MasterInventory instance);
    partial void InsertMasterOrgType(MasterOrgType instance);
    partial void UpdateMasterOrgType(MasterOrgType instance);
    partial void DeleteMasterOrgType(MasterOrgType instance);
    partial void InsertStatusHistory(StatusHistory instance);
    partial void UpdateStatusHistory(StatusHistory instance);
    partial void DeleteStatusHistory(StatusHistory instance);
    partial void InsertUserLocation(UserLocation instance);
    partial void UpdateUserLocation(UserLocation instance);
    partial void DeleteUserLocation(UserLocation instance);
    partial void InsertActivityHistory(ActivityHistory instance);
    partial void UpdateActivityHistory(ActivityHistory instance);
    partial void DeleteActivityHistory(ActivityHistory instance);
    partial void InsertMasterOrg(MasterOrg instance);
    partial void UpdateMasterOrg(MasterOrg instance);
    partial void DeleteMasterOrg(MasterOrg instance);
    partial void InsertMasterSetting(MasterSetting instance);
    partial void UpdateMasterSetting(MasterSetting instance);
    partial void DeleteMasterSetting(MasterSetting instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertClaim(Claim instance);
    partial void UpdateClaim(Claim instance);
    partial void DeleteClaim(Claim instance);
    partial void InsertMasterRole(MasterRole instance);
    partial void UpdateMasterRole(MasterRole instance);
    partial void DeleteMasterRole(MasterRole instance);
    partial void InsertMasterBrand(MasterBrand instance);
    partial void UpdateMasterBrand(MasterBrand instance);
    partial void DeleteMasterBrand(MasterBrand instance);
    #endregion
		
		public CPMmodel() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CPMConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CPMmodel(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CPMmodel(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CPMmodel(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CPMmodel(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClaimDetail> ClaimDetails
		{
			get
			{
				return this.GetTable<ClaimDetail>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<CustomerLocation> CustomerLocations
		{
			get
			{
				return this.GetTable<CustomerLocation>();
			}
		}
		
		public System.Data.Linq.Table<ERPCustomerLocation> ERPCustomerLocations
		{
			get
			{
				return this.GetTable<ERPCustomerLocation>();
			}
		}
		
		public System.Data.Linq.Table<ERPCustomerOrg> ERPCustomerOrgs
		{
			get
			{
				return this.GetTable<ERPCustomerOrg>();
			}
		}
		
		public System.Data.Linq.Table<ERPMasterBrand> ERPMasterBrands
		{
			get
			{
				return this.GetTable<ERPMasterBrand>();
			}
		}
		
		public System.Data.Linq.Table<ERPMasterInventory> ERPMasterInventories
		{
			get
			{
				return this.GetTable<ERPMasterInventory>();
			}
		}
		
		public System.Data.Linq.Table<ERPUser> ERPUsers
		{
			get
			{
				return this.GetTable<ERPUser>();
			}
		}
		
		public System.Data.Linq.Table<FileDetail> FileDetails
		{
			get
			{
				return this.GetTable<FileDetail>();
			}
		}
		
		public System.Data.Linq.Table<FileHeader> FileHeaders
		{
			get
			{
				return this.GetTable<FileHeader>();
			}
		}
		
		public System.Data.Linq.Table<MasterActivity> MasterActivities
		{
			get
			{
				return this.GetTable<MasterActivity>();
			}
		}
		
		public System.Data.Linq.Table<MasterClaimStatus> MasterClaimStatus
		{
			get
			{
				return this.GetTable<MasterClaimStatus>();
			}
		}
		
		public System.Data.Linq.Table<MasterDefect> MasterDefects
		{
			get
			{
				return this.GetTable<MasterDefect>();
			}
		}
		
		public System.Data.Linq.Table<MasterFileTypeDetail> MasterFileTypeDetails
		{
			get
			{
				return this.GetTable<MasterFileTypeDetail>();
			}
		}
		
		public System.Data.Linq.Table<MasterFileTypeHeader> MasterFileTypeHeaders
		{
			get
			{
				return this.GetTable<MasterFileTypeHeader>();
			}
		}
		
		public System.Data.Linq.Table<MasterInventory> MasterInventories
		{
			get
			{
				return this.GetTable<MasterInventory>();
			}
		}
		
		public System.Data.Linq.Table<MasterOrgType> MasterOrgTypes
		{
			get
			{
				return this.GetTable<MasterOrgType>();
			}
		}
		
		public System.Data.Linq.Table<StatusHistory> StatusHistories
		{
			get
			{
				return this.GetTable<StatusHistory>();
			}
		}
		
		public System.Data.Linq.Table<UserLocation> UserLocations
		{
			get
			{
				return this.GetTable<UserLocation>();
			}
		}
		
		public System.Data.Linq.Table<vw_ClaimDetail_Item_Defect> vw_ClaimDetail_Item_Defects
		{
			get
			{
				return this.GetTable<vw_ClaimDetail_Item_Defect>();
			}
		}
		
		public System.Data.Linq.Table<vw_CustLoc_User_UserLoc> vw_CustLoc_User_UserLocs
		{
			get
			{
				return this.GetTable<vw_CustLoc_User_UserLoc>();
			}
		}
		
		public System.Data.Linq.Table<vw_CustOrg_Loc> vw_CustOrg_Locs
		{
			get
			{
				return this.GetTable<vw_CustOrg_Loc>();
			}
		}
		
		public System.Data.Linq.Table<vw_MasterOrg_Role> vw_MasterOrg_Roles
		{
			get
			{
				return this.GetTable<vw_MasterOrg_Role>();
			}
		}
		
		public System.Data.Linq.Table<ActivityHistory> ActivityHistories
		{
			get
			{
				return this.GetTable<ActivityHistory>();
			}
		}
		
		public System.Data.Linq.Table<vw_ActivityLog> vw_ActivityLogs
		{
			get
			{
				return this.GetTable<vw_ActivityLog>();
			}
		}
		
		public System.Data.Linq.Table<MasterOrg> MasterOrgs
		{
			get
			{
				return this.GetTable<MasterOrg>();
			}
		}
		
		public System.Data.Linq.Table<MasterSetting> MasterSettings
		{
			get
			{
				return this.GetTable<MasterSetting>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<vw_Users_Role_Org> vw_Users_Role_Orgs
		{
			get
			{
				return this.GetTable<vw_Users_Role_Org>();
			}
		}
		
		public System.Data.Linq.Table<vw_StatusHistory_Usr> vw_StatusHistory_Usrs
		{
			get
			{
				return this.GetTable<vw_StatusHistory_Usr>();
			}
		}
		
		public System.Data.Linq.Table<vw_CustOrg_SalesUser> vw_CustOrg_SalesUsers
		{
			get
			{
				return this.GetTable<vw_CustOrg_SalesUser>();
			}
		}
		
		public System.Data.Linq.Table<Claim> Claims
		{
			get
			{
				return this.GetTable<Claim>();
			}
		}
		
		public System.Data.Linq.Table<MasterRole> MasterRoles
		{
			get
			{
				return this.GetTable<MasterRole>();
			}
		}
		
		public System.Data.Linq.Table<vw_Yr_Claims_Item> vw_Yr_Claims_Items
		{
			get
			{
				return this.GetTable<vw_Yr_Claims_Item>();
			}
		}
		
		public System.Data.Linq.Table<MasterBrand> MasterBrands
		{
			get
			{
				return this.GetTable<MasterBrand>();
			}
		}
		
		public System.Data.Linq.Table<vw_Brand_Item> vw_Brand_Items
		{
			get
			{
				return this.GetTable<vw_Brand_Item>();
			}
		}
		
		public System.Data.Linq.Table<vw_Claim_Master_User_Loc> vw_Claim_Master_User_Locs
		{
			get
			{
				return this.GetTable<vw_Claim_Master_User_Loc>();
			}
		}
		
		public System.Data.Linq.Table<vw_Claim_Dashboard> vw_Claim_Dashboards
		{
			get
			{
				return this.GetTable<vw_Claim_Dashboard>();
			}
		}
		
		public System.Data.Linq.Table<vw_ClaimWithItemDetail> vw_ClaimWithItemDetails
		{
			get
			{
				return this.GetTable<vw_ClaimWithItemDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClaimDetail")]
	public partial class ClaimDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _ItemID;
		
		private string _Description;
		
		private string _Note;
		
		private string _Serial;
		
		private string _DOT;
		
		private decimal _TDRemaining;
		
		private decimal _TDOriginal;
		
		private System.Nullable<decimal> _RemainingTread;
		
		private int _NatureOfDefect;
		
		private decimal _CurrentPrice;
		
		private System.Nullable<decimal> _CreditAmt;
		
		private decimal _CurrentCost;
		
		private System.Nullable<decimal> _InvoiceAmt;
		
		private string _Size;
		
		private string _Ply;
		
		private string _Type;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<FileDetail> _FileDetails;
		
		private EntityRef<MasterDefect> _MasterDefect;
		
		private EntityRef<Claim> _Claim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClaimIDChanging(int value);
    partial void OnClaimIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnDOTChanging(string value);
    partial void OnDOTChanged();
    partial void OnTDRemainingChanging(decimal value);
    partial void OnTDRemainingChanged();
    partial void OnTDOriginalChanging(decimal value);
    partial void OnTDOriginalChanged();
    partial void OnRemainingTreadChanging(System.Nullable<decimal> value);
    partial void OnRemainingTreadChanged();
    partial void OnNatureOfDefectChanging(int value);
    partial void OnNatureOfDefectChanged();
    partial void OnCurrentPriceChanging(decimal value);
    partial void OnCurrentPriceChanged();
    partial void OnCreditAmtChanging(System.Nullable<decimal> value);
    partial void OnCreditAmtChanged();
    partial void OnCurrentCostChanging(decimal value);
    partial void OnCurrentCostChanged();
    partial void OnInvoiceAmtChanging(System.Nullable<decimal> value);
    partial void OnInvoiceAmtChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPlyChanging(string value);
    partial void OnPlyChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ClaimDetail()
		{
			this._FileDetails = new EntitySet<FileDetail>(new Action<FileDetail>(this.attach_FileDetails), new Action<FileDetail>(this.detach_FileDetails));
			this._MasterDefect = default(EntityRef<MasterDefect>);
			this._Claim = default(EntityRef<Claim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					if (this._Claim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(20)")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOT", DbType="NVarChar(20)")]
		public string DOT
		{
			get
			{
				return this._DOT;
			}
			set
			{
				if ((this._DOT != value))
				{
					this.OnDOTChanging(value);
					this.SendPropertyChanging();
					this._DOT = value;
					this.SendPropertyChanged("DOT");
					this.OnDOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDRemaining", DbType="Decimal(18,2) NOT NULL")]
		public decimal TDRemaining
		{
			get
			{
				return this._TDRemaining;
			}
			set
			{
				if ((this._TDRemaining != value))
				{
					this.OnTDRemainingChanging(value);
					this.SendPropertyChanging();
					this._TDRemaining = value;
					this.SendPropertyChanged("TDRemaining");
					this.OnTDRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDOriginal", DbType="Decimal(18,2) NOT NULL")]
		public decimal TDOriginal
		{
			get
			{
				return this._TDOriginal;
			}
			set
			{
				if ((this._TDOriginal != value))
				{
					this.OnTDOriginalChanging(value);
					this.SendPropertyChanging();
					this._TDOriginal = value;
					this.SendPropertyChanged("TDOriginal");
					this.OnTDOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingTread", AutoSync=AutoSync.Always, DbType="Decimal(38,16)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RemainingTread
		{
			get
			{
				return this._RemainingTread;
			}
			set
			{
				if ((this._RemainingTread != value))
				{
					this.OnRemainingTreadChanging(value);
					this.SendPropertyChanging();
					this._RemainingTread = value;
					this.SendPropertyChanged("RemainingTread");
					this.OnRemainingTreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatureOfDefect", DbType="Int NOT NULL")]
		public int NatureOfDefect
		{
			get
			{
				return this._NatureOfDefect;
			}
			set
			{
				if ((this._NatureOfDefect != value))
				{
					if (this._MasterDefect.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNatureOfDefectChanging(value);
					this.SendPropertyChanging();
					this._NatureOfDefect = value;
					this.SendPropertyChanged("NatureOfDefect");
					this.OnNatureOfDefectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmt", AutoSync=AutoSync.Always, DbType="Decimal(38,6)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CreditAmt
		{
			get
			{
				return this._CreditAmt;
			}
			set
			{
				if ((this._CreditAmt != value))
				{
					this.OnCreditAmtChanging(value);
					this.SendPropertyChanging();
					this._CreditAmt = value;
					this.SendPropertyChanged("CreditAmt");
					this.OnCreditAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this.OnCurrentCostChanging(value);
					this.SendPropertyChanging();
					this._CurrentCost = value;
					this.SendPropertyChanged("CurrentCost");
					this.OnCurrentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmt", AutoSync=AutoSync.Always, DbType="Decimal(38,6)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InvoiceAmt
		{
			get
			{
				return this._InvoiceAmt;
			}
			set
			{
				if ((this._InvoiceAmt != value))
				{
					this.OnInvoiceAmtChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmt = value;
					this.SendPropertyChanged("InvoiceAmt");
					this.OnInvoiceAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ply", DbType="NVarChar(20)")]
		public string Ply
		{
			get
			{
				return this._Ply;
			}
			set
			{
				if ((this._Ply != value))
				{
					this.OnPlyChanging(value);
					this.SendPropertyChanging();
					this._Ply = value;
					this.SendPropertyChanged("Ply");
					this.OnPlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClaimDetail_FileDetail", Storage="_FileDetails", ThisKey="ID", OtherKey="ClaimDetailID")]
		public EntitySet<FileDetail> FileDetails
		{
			get
			{
				return this._FileDetails;
			}
			set
			{
				this._FileDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterDefect_ClaimDetail", Storage="_MasterDefect", ThisKey="NatureOfDefect", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal MasterDefect MasterDefect
		{
			get
			{
				return this._MasterDefect.Entity;
			}
			set
			{
				MasterDefect previousValue = this._MasterDefect.Entity;
				if (((previousValue != value) 
							|| (this._MasterDefect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterDefect.Entity = null;
						previousValue.ClaimDetails.Remove(this);
					}
					this._MasterDefect.Entity = value;
					if ((value != null))
					{
						value.ClaimDetails.Add(this);
						this._NatureOfDefect = value.ID;
					}
					else
					{
						this._NatureOfDefect = default(int);
					}
					this.SendPropertyChanged("MasterDefect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_ClaimDetail", Storage="_Claim", ThisKey="ClaimID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Claim Claim
		{
			get
			{
				return this._Claim.Entity;
			}
			set
			{
				Claim previousValue = this._Claim.Entity;
				if (((previousValue != value) 
							|| (this._Claim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Claim.Entity = null;
						previousValue.ClaimDetails.Remove(this);
					}
					this._Claim.Entity = value;
					if ((value != null))
					{
						value.ClaimDetails.Add(this);
						this._ClaimID = value.ID;
					}
					else
					{
						this._ClaimID = default(int);
					}
					this.SendPropertyChanged("Claim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FileDetails(FileDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClaimDetail = this;
		}
		
		private void detach_FileDetails(FileDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClaimDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _UserID;
		
		private System.DateTime _PostedOn;
		
		private string _Comment1;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntityRef<Claim> _Claim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClaimIDChanging(int value);
    partial void OnClaimIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPostedOnChanging(System.DateTime value);
    partial void OnPostedOnChanged();
    partial void OnComment1Changing(string value);
    partial void OnComment1Changed();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public Comment()
		{
			this._Claim = default(EntityRef<Claim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					if (this._Claim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedOn", DbType="DateTime NOT NULL")]
		public System.DateTime PostedOn
		{
			get
			{
				return this._PostedOn;
			}
			set
			{
				if ((this._PostedOn != value))
				{
					this.OnPostedOnChanging(value);
					this.SendPropertyChanging();
					this._PostedOn = value;
					this.SendPropertyChanged("PostedOn");
					this.OnPostedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Comment", Storage="_Comment1", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment1
		{
			get
			{
				return this._Comment1;
			}
			set
			{
				if ((this._Comment1 != value))
				{
					this.OnComment1Changing(value);
					this.SendPropertyChanging();
					this._Comment1 = value;
					this.SendPropertyChanged("Comment1");
					this.OnComment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_Comment", Storage="_Claim", ThisKey="ClaimID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Claim Claim
		{
			get
			{
				return this._Claim.Entity;
			}
			set
			{
				Claim previousValue = this._Claim.Entity;
				if (((previousValue != value) 
							|| (this._Claim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Claim.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Claim.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._ClaimID = value.ID;
					}
					else
					{
						this._ClaimID = default(int);
					}
					this.SendPropertyChanged("Claim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerLocation")]
	public partial class CustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerId;
		
		private string _Code;
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Zip;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<UserLocation> _UserLocations;
		
		private EntityRef<MasterOrg> _MasterOrg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public CustomerLocation()
		{
			this._UserLocations = new EntitySet<UserLocation>(new Action<UserLocation>(this.attach_UserLocations), new Action<UserLocation>(this.detach_UserLocations));
			this._MasterOrg = default(EntityRef<MasterOrg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MasterOrg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_UserLocation", Storage="_UserLocations", ThisKey="ID", OtherKey="LocID")]
		public EntitySet<UserLocation> UserLocations
		{
			get
			{
				return this._UserLocations;
			}
			set
			{
				this._UserLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrg_CustomerLocation", Storage="_MasterOrg", ThisKey="CustomerId", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MasterOrg MasterOrg
		{
			get
			{
				return this._MasterOrg.Entity;
			}
			set
			{
				MasterOrg previousValue = this._MasterOrg.Entity;
				if (((previousValue != value) 
							|| (this._MasterOrg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterOrg.Entity = null;
						previousValue.CustomerLocations.Remove(this);
					}
					this._MasterOrg.Entity = value;
					if ((value != null))
					{
						value.CustomerLocations.Add(this);
						this._CustomerId = value.ID;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MasterOrg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLocations(UserLocation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = this;
		}
		
		private void detach_UserLocations(UserLocation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ERPCustomerLocation")]
	public partial class ERPCustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private System.Nullable<int> _CustomerId;
		
		private string _CustomerNo;
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Zip;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ERPCustomerLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="NVarChar(20)")]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ERPCustomerOrg")]
	public partial class ERPCustomerOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Zip;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ERPCustomerOrg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ERPMasterBrand")]
	public partial class ERPMasterBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<int> _SortOrder;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ERPMasterBrand()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ERPMasterInventory")]
	public partial class ERPMasterInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ItemNo;
		
		private string _Description;
		
		private System.Nullable<int> _BrandID;
		
		private string _Brand;
		
		private string _Size;
		
		private string _Ply;
		
		private string _Type;
		
		private decimal _TDOriginal;
		
		private decimal _CurrentCost;
		
		private System.Nullable<decimal> _CurrentPrice;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBrandIDChanging(System.Nullable<int> value);
    partial void OnBrandIDChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPlyChanging(string value);
    partial void OnPlyChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTDOriginalChanging(decimal value);
    partial void OnTDOriginalChanged();
    partial void OnCurrentCostChanging(decimal value);
    partial void OnCurrentCostChanged();
    partial void OnCurrentPriceChanging(System.Nullable<decimal> value);
    partial void OnCurrentPriceChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ERPMasterInventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int")]
		public System.Nullable<int> BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ply", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Ply
		{
			get
			{
				return this._Ply;
			}
			set
			{
				if ((this._Ply != value))
				{
					this.OnPlyChanging(value);
					this.SendPropertyChanging();
					this._Ply = value;
					this.SendPropertyChanged("Ply");
					this.OnPlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDOriginal", DbType="Decimal(18,0) NOT NULL")]
		public decimal TDOriginal
		{
			get
			{
				return this._TDOriginal;
			}
			set
			{
				if ((this._TDOriginal != value))
				{
					this.OnTDOriginalChanging(value);
					this.SendPropertyChanging();
					this._TDOriginal = value;
					this.SendPropertyChanged("TDOriginal");
					this.OnTDOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Decimal(18,0) NOT NULL")]
		public decimal CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this.OnCurrentCostChanging(value);
					this.SendPropertyChanging();
					this._CurrentCost = value;
					this.SendPropertyChanged("CurrentCost");
					this.OnCurrentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ERPUsers")]
	public partial class ERPUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OrgID;
		
		private string _OrgCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Password;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrgIDChanging(System.Nullable<int> value);
    partial void OnOrgIDChanged();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public ERPUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int")]
		public System.Nullable<int> OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="NVarChar(50)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileDetail")]
	public partial class FileDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _ClaimDetailID;
		
		private int _UserID;
		
		private string _FileName;
		
		private int _FileType;
		
		private System.DateTime _UploadedOn;
		
		private string _Comment;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntityRef<ClaimDetail> _ClaimDetail;
		
		private EntityRef<MasterFileTypeDetail> _MasterFileTypeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClaimIDChanging(int value);
    partial void OnClaimIDChanged();
    partial void OnClaimDetailIDChanging(int value);
    partial void OnClaimDetailIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnUploadedOnChanging(System.DateTime value);
    partial void OnUploadedOnChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public FileDetail()
		{
			this._ClaimDetail = default(EntityRef<ClaimDetail>);
			this._MasterFileTypeDetail = default(EntityRef<MasterFileTypeDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDetailID", DbType="Int NOT NULL")]
		public int ClaimDetailID
		{
			get
			{
				return this._ClaimDetailID;
			}
			set
			{
				if ((this._ClaimDetailID != value))
				{
					if (this._ClaimDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClaimDetailIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimDetailID = value;
					this.SendPropertyChanged("ClaimDetailID");
					this.OnClaimDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					if (this._MasterFileTypeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedOn", DbType="DateTime NOT NULL")]
		public System.DateTime UploadedOn
		{
			get
			{
				return this._UploadedOn;
			}
			set
			{
				if ((this._UploadedOn != value))
				{
					this.OnUploadedOnChanging(value);
					this.SendPropertyChanging();
					this._UploadedOn = value;
					this.SendPropertyChanged("UploadedOn");
					this.OnUploadedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClaimDetail_FileDetail", Storage="_ClaimDetail", ThisKey="ClaimDetailID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal ClaimDetail ClaimDetail
		{
			get
			{
				return this._ClaimDetail.Entity;
			}
			set
			{
				ClaimDetail previousValue = this._ClaimDetail.Entity;
				if (((previousValue != value) 
							|| (this._ClaimDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaimDetail.Entity = null;
						previousValue.FileDetails.Remove(this);
					}
					this._ClaimDetail.Entity = value;
					if ((value != null))
					{
						value.FileDetails.Add(this);
						this._ClaimDetailID = value.ID;
					}
					else
					{
						this._ClaimDetailID = default(int);
					}
					this.SendPropertyChanged("ClaimDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterFileTypeDetail_FileDetail", Storage="_MasterFileTypeDetail", ThisKey="FileType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal MasterFileTypeDetail MasterFileTypeDetail
		{
			get
			{
				return this._MasterFileTypeDetail.Entity;
			}
			set
			{
				MasterFileTypeDetail previousValue = this._MasterFileTypeDetail.Entity;
				if (((previousValue != value) 
							|| (this._MasterFileTypeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterFileTypeDetail.Entity = null;
						previousValue.FileDetails.Remove(this);
					}
					this._MasterFileTypeDetail.Entity = value;
					if ((value != null))
					{
						value.FileDetails.Add(this);
						this._FileType = value.ID;
					}
					else
					{
						this._FileType = default(int);
					}
					this.SendPropertyChanged("MasterFileTypeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileHeader")]
	public partial class FileHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _UserID;
		
		private string _FileName;
		
		private int _FileType;
		
		private System.DateTime _UploadedOn;
		
		private string _Comment;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntityRef<MasterFileTypeHeader> _MasterFileTypeHeader;
		
		private EntityRef<Claim> _Claim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClaimIDChanging(int value);
    partial void OnClaimIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileTypeChanging(int value);
    partial void OnFileTypeChanged();
    partial void OnUploadedOnChanging(System.DateTime value);
    partial void OnUploadedOnChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public FileHeader()
		{
			this._MasterFileTypeHeader = default(EntityRef<MasterFileTypeHeader>);
			this._Claim = default(EntityRef<Claim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					if (this._Claim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int NOT NULL")]
		public int FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					if (this._MasterFileTypeHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedOn", DbType="DateTime NOT NULL")]
		public System.DateTime UploadedOn
		{
			get
			{
				return this._UploadedOn;
			}
			set
			{
				if ((this._UploadedOn != value))
				{
					this.OnUploadedOnChanging(value);
					this.SendPropertyChanging();
					this._UploadedOn = value;
					this.SendPropertyChanged("UploadedOn");
					this.OnUploadedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterFileTypeHeader_FileHeader", Storage="_MasterFileTypeHeader", ThisKey="FileType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal MasterFileTypeHeader MasterFileTypeHeader
		{
			get
			{
				return this._MasterFileTypeHeader.Entity;
			}
			set
			{
				MasterFileTypeHeader previousValue = this._MasterFileTypeHeader.Entity;
				if (((previousValue != value) 
							|| (this._MasterFileTypeHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterFileTypeHeader.Entity = null;
						previousValue.FileHeaders.Remove(this);
					}
					this._MasterFileTypeHeader.Entity = value;
					if ((value != null))
					{
						value.FileHeaders.Add(this);
						this._FileType = value.ID;
					}
					else
					{
						this._FileType = default(int);
					}
					this.SendPropertyChanged("MasterFileTypeHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_FileHeader", Storage="_Claim", ThisKey="ClaimID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		internal Claim Claim
		{
			get
			{
				return this._Claim.Entity;
			}
			set
			{
				Claim previousValue = this._Claim.Entity;
				if (((previousValue != value) 
							|| (this._Claim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Claim.Entity = null;
						previousValue.FileHeaders.Remove(this);
					}
					this._Claim.Entity = value;
					if ((value != null))
					{
						value.FileHeaders.Add(this);
						this._ClaimID = value.ID;
					}
					else
					{
						this._ClaimID = default(int);
					}
					this.SendPropertyChanged("Claim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterActivity")]
	public partial class MasterActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<ActivityHistory> _ActivityHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterActivity()
		{
			this._ActivityHistories = new EntitySet<ActivityHistory>(new Action<ActivityHistory>(this.attach_ActivityHistories), new Action<ActivityHistory>(this.detach_ActivityHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterActivity_ActivityHistory", Storage="_ActivityHistories", ThisKey="ID", OtherKey="ActivityID")]
		public EntitySet<ActivityHistory> ActivityHistories
		{
			get
			{
				return this._ActivityHistories;
			}
			set
			{
				this._ActivityHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityHistories(ActivityHistory entity)
		{
			this.SendPropertyChanging();
			entity.MasterActivity = this;
		}
		
		private void detach_ActivityHistories(ActivityHistory entity)
		{
			this.SendPropertyChanging();
			entity.MasterActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterClaimStatus")]
	public partial class MasterClaimStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<StatusHistory> _StatusHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterClaimStatus()
		{
			this._StatusHistories = new EntitySet<StatusHistory>(new Action<StatusHistory>(this.attach_StatusHistories), new Action<StatusHistory>(this.detach_StatusHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterClaimStatus_StatusHistory", Storage="_StatusHistories", ThisKey="ID", OtherKey="NewStatusID")]
		public EntitySet<StatusHistory> StatusHistories
		{
			get
			{
				return this._StatusHistories;
			}
			set
			{
				this._StatusHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatusHistories(StatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.MasterClaimStatus = this;
		}
		
		private void detach_StatusHistories(StatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.MasterClaimStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterDefect")]
	public partial class MasterDefect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<ClaimDetail> _ClaimDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterDefect()
		{
			this._ClaimDetails = new EntitySet<ClaimDetail>(new Action<ClaimDetail>(this.attach_ClaimDetails), new Action<ClaimDetail>(this.detach_ClaimDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterDefect_ClaimDetail", Storage="_ClaimDetails", ThisKey="ID", OtherKey="NatureOfDefect")]
		public EntitySet<ClaimDetail> ClaimDetails
		{
			get
			{
				return this._ClaimDetails;
			}
			set
			{
				this._ClaimDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClaimDetails(ClaimDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterDefect = this;
		}
		
		private void detach_ClaimDetails(ClaimDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterDefect = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterFileTypeDetail")]
	public partial class MasterFileTypeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<FileDetail> _FileDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterFileTypeDetail()
		{
			this._FileDetails = new EntitySet<FileDetail>(new Action<FileDetail>(this.attach_FileDetails), new Action<FileDetail>(this.detach_FileDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterFileTypeDetail_FileDetail", Storage="_FileDetails", ThisKey="ID", OtherKey="FileType")]
		public EntitySet<FileDetail> FileDetails
		{
			get
			{
				return this._FileDetails;
			}
			set
			{
				this._FileDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FileDetails(FileDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterFileTypeDetail = this;
		}
		
		private void detach_FileDetails(FileDetail entity)
		{
			this.SendPropertyChanging();
			entity.MasterFileTypeDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterFileTypeHeader")]
	public partial class MasterFileTypeHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<FileHeader> _FileHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterFileTypeHeader()
		{
			this._FileHeaders = new EntitySet<FileHeader>(new Action<FileHeader>(this.attach_FileHeaders), new Action<FileHeader>(this.detach_FileHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterFileTypeHeader_FileHeader", Storage="_FileHeaders", ThisKey="ID", OtherKey="FileType")]
		public EntitySet<FileHeader> FileHeaders
		{
			get
			{
				return this._FileHeaders;
			}
			set
			{
				this._FileHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FileHeaders(FileHeader entity)
		{
			this.SendPropertyChanging();
			entity.MasterFileTypeHeader = this;
		}
		
		private void detach_FileHeaders(FileHeader entity)
		{
			this.SendPropertyChanging();
			entity.MasterFileTypeHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterInventory")]
	public partial class MasterInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ItemNo;
		
		private string _Description;
		
		private System.Nullable<int> _BrandId;
		
		private string _Brand;
		
		private string _Size;
		
		private string _Ply;
		
		private string _Type;
		
		private decimal _TDOriginal;
		
		private decimal _CurrentCost;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private System.Nullable<decimal> _CurrentPrice;
		
		private EntityRef<MasterBrand> _MasterBrand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBrandIdChanging(System.Nullable<int> value);
    partial void OnBrandIdChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPlyChanging(string value);
    partial void OnPlyChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTDOriginalChanging(decimal value);
    partial void OnTDOriginalChanged();
    partial void OnCurrentCostChanging(decimal value);
    partial void OnCurrentCostChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCurrentPriceChanging(System.Nullable<decimal> value);
    partial void OnCurrentPriceChanged();
    #endregion
		
		public MasterInventory()
		{
			this._MasterBrand = default(EntityRef<MasterBrand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandId", DbType="Int")]
		public System.Nullable<int> BrandId
		{
			get
			{
				return this._BrandId;
			}
			set
			{
				if ((this._BrandId != value))
				{
					if (this._MasterBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIdChanging(value);
					this.SendPropertyChanging();
					this._BrandId = value;
					this.SendPropertyChanged("BrandId");
					this.OnBrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ply", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Ply
		{
			get
			{
				return this._Ply;
			}
			set
			{
				if ((this._Ply != value))
				{
					this.OnPlyChanging(value);
					this.SendPropertyChanging();
					this._Ply = value;
					this.SendPropertyChanged("Ply");
					this.OnPlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDOriginal", DbType="Decimal(18,0) NOT NULL")]
		public decimal TDOriginal
		{
			get
			{
				return this._TDOriginal;
			}
			set
			{
				if ((this._TDOriginal != value))
				{
					this.OnTDOriginalChanging(value);
					this.SendPropertyChanging();
					this._TDOriginal = value;
					this.SendPropertyChanged("TDOriginal");
					this.OnTDOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Decimal(18,0) NOT NULL")]
		public decimal CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this.OnCurrentCostChanging(value);
					this.SendPropertyChanging();
					this._CurrentCost = value;
					this.SendPropertyChanged("CurrentCost");
					this.OnCurrentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterBrand_MasterInventory", Storage="_MasterBrand", ThisKey="BrandId", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MasterBrand MasterBrand
		{
			get
			{
				return this._MasterBrand.Entity;
			}
			set
			{
				MasterBrand previousValue = this._MasterBrand.Entity;
				if (((previousValue != value) 
							|| (this._MasterBrand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterBrand.Entity = null;
						previousValue.MasterInventories.Remove(this);
					}
					this._MasterBrand.Entity = value;
					if ((value != null))
					{
						value.MasterInventories.Add(this);
						this._BrandId = value.ID;
					}
					else
					{
						this._BrandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MasterBrand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterOrgType")]
	public partial class MasterOrgType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Description;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<MasterOrg> _MasterOrgs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public MasterOrgType()
		{
			this._MasterOrgs = new EntitySet<MasterOrg>(new Action<MasterOrg>(this.attach_MasterOrgs), new Action<MasterOrg>(this.detach_MasterOrgs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrgType_MasterOrg", Storage="_MasterOrgs", ThisKey="ID", OtherKey="OrgTypeId")]
		public EntitySet<MasterOrg> MasterOrgs
		{
			get
			{
				return this._MasterOrgs;
			}
			set
			{
				this._MasterOrgs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MasterOrgs(MasterOrg entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrgType = this;
		}
		
		private void detach_MasterOrgs(MasterOrg entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrgType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusHistory")]
	public partial class StatusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _OldStatusID;
		
		private int _NewStatusID;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntityRef<MasterClaimStatus> _MasterClaimStatus;
		
		private EntityRef<Claim> _Claim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClaimIDChanging(int value);
    partial void OnClaimIDChanged();
    partial void OnOldStatusIDChanging(int value);
    partial void OnOldStatusIDChanged();
    partial void OnNewStatusIDChanging(int value);
    partial void OnNewStatusIDChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public StatusHistory()
		{
			this._MasterClaimStatus = default(EntityRef<MasterClaimStatus>);
			this._Claim = default(EntityRef<Claim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					if (this._Claim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatusID", DbType="Int NOT NULL")]
		public int OldStatusID
		{
			get
			{
				return this._OldStatusID;
			}
			set
			{
				if ((this._OldStatusID != value))
				{
					this.OnOldStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OldStatusID = value;
					this.SendPropertyChanged("OldStatusID");
					this.OnOldStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatusID", DbType="Int NOT NULL")]
		public int NewStatusID
		{
			get
			{
				return this._NewStatusID;
			}
			set
			{
				if ((this._NewStatusID != value))
				{
					if (this._MasterClaimStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewStatusIDChanging(value);
					this.SendPropertyChanging();
					this._NewStatusID = value;
					this.SendPropertyChanged("NewStatusID");
					this.OnNewStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterClaimStatus_StatusHistory", Storage="_MasterClaimStatus", ThisKey="NewStatusID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MasterClaimStatus MasterClaimStatus
		{
			get
			{
				return this._MasterClaimStatus.Entity;
			}
			set
			{
				MasterClaimStatus previousValue = this._MasterClaimStatus.Entity;
				if (((previousValue != value) 
							|| (this._MasterClaimStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterClaimStatus.Entity = null;
						previousValue.StatusHistories.Remove(this);
					}
					this._MasterClaimStatus.Entity = value;
					if ((value != null))
					{
						value.StatusHistories.Add(this);
						this._NewStatusID = value.ID;
					}
					else
					{
						this._NewStatusID = default(int);
					}
					this.SendPropertyChanged("MasterClaimStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_StatusHistory", Storage="_Claim", ThisKey="ClaimID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Claim Claim
		{
			get
			{
				return this._Claim.Entity;
			}
			set
			{
				Claim previousValue = this._Claim.Entity;
				if (((previousValue != value) 
							|| (this._Claim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Claim.Entity = null;
						previousValue.StatusHistories.Remove(this);
					}
					this._Claim.Entity = value;
					if ((value != null))
					{
						value.StatusHistories.Add(this);
						this._ClaimID = value.ID;
					}
					else
					{
						this._ClaimID = default(int);
					}
					this.SendPropertyChanged("Claim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLocation")]
	public partial class UserLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _LocID;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntityRef<CustomerLocation> _CustomerLocation;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLocIDChanging(int value);
    partial void OnLocIDChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public UserLocation()
		{
			this._CustomerLocation = default(EntityRef<CustomerLocation>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocID", DbType="Int NOT NULL")]
		public int LocID
		{
			get
			{
				return this._LocID;
			}
			set
			{
				if ((this._LocID != value))
				{
					if (this._CustomerLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocIDChanging(value);
					this.SendPropertyChanging();
					this._LocID = value;
					this.SendPropertyChanged("LocID");
					this.OnLocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerLocation_UserLocation", Storage="_CustomerLocation", ThisKey="LocID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerLocation CustomerLocation
		{
			get
			{
				return this._CustomerLocation.Entity;
			}
			set
			{
				CustomerLocation previousValue = this._CustomerLocation.Entity;
				if (((previousValue != value) 
							|| (this._CustomerLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerLocation.Entity = null;
						previousValue.UserLocations.Remove(this);
					}
					this._CustomerLocation.Entity = value;
					if ((value != null))
					{
						value.UserLocations.Add(this);
						this._LocID = value.ID;
					}
					else
					{
						this._LocID = default(int);
					}
					this.SendPropertyChanged("CustomerLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserLocation", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UserLocations.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UserLocations.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_ClaimDetail_Item_Defect")]
	public partial class vw_ClaimDetail_Item_Defect
	{
		
		private int _ID;
		
		private int _ClaimID;
		
		private int _ItemID;
		
		private string _Description;
		
		private string _Note;
		
		private string _Serial;
		
		private string _DOT;
		
		private decimal _TDRemaining;
		
		private decimal _TDOriginal;
		
		private System.Nullable<decimal> _RemainingTread;
		
		private int _NatureOfDefect;
		
		private decimal _CurrentPrice;
		
		private System.Nullable<decimal> _CreditAmt;
		
		private decimal _CurrentCost;
		
		private System.Nullable<decimal> _InvoiceAmt;
		
		private string _Size;
		
		private string _Ply;
		
		private string _Type;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private string _ItemCode;
		
		private string _Defect;
		
		public vw_ClaimDetail_Item_Defect()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					this._ClaimID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(20)")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this._Serial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOT", DbType="NVarChar(20)")]
		public string DOT
		{
			get
			{
				return this._DOT;
			}
			set
			{
				if ((this._DOT != value))
				{
					this._DOT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDRemaining", DbType="Decimal(18,0) NOT NULL")]
		public decimal TDRemaining
		{
			get
			{
				return this._TDRemaining;
			}
			set
			{
				if ((this._TDRemaining != value))
				{
					this._TDRemaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDOriginal", DbType="Decimal(18,0) NOT NULL")]
		public decimal TDOriginal
		{
			get
			{
				return this._TDOriginal;
			}
			set
			{
				if ((this._TDOriginal != value))
				{
					this._TDOriginal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingTread", DbType="Decimal(38,16)")]
		public System.Nullable<decimal> RemainingTread
		{
			get
			{
				return this._RemainingTread;
			}
			set
			{
				if ((this._RemainingTread != value))
				{
					this._RemainingTread = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatureOfDefect", DbType="Int NOT NULL")]
		public int NatureOfDefect
		{
			get
			{
				return this._NatureOfDefect;
			}
			set
			{
				if ((this._NatureOfDefect != value))
				{
					this._NatureOfDefect = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this._CurrentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmt", DbType="Decimal(38,12)")]
		public System.Nullable<decimal> CreditAmt
		{
			get
			{
				return this._CreditAmt;
			}
			set
			{
				if ((this._CreditAmt != value))
				{
					this._CreditAmt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Decimal(18,0) NOT NULL")]
		public decimal CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this._CurrentCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmt", DbType="Decimal(38,12)")]
		public System.Nullable<decimal> InvoiceAmt
		{
			get
			{
				return this._InvoiceAmt;
			}
			set
			{
				if ((this._InvoiceAmt != value))
				{
					this._InvoiceAmt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(20)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ply", DbType="NVarChar(20)")]
		public string Ply
		{
			get
			{
				return this._Ply;
			}
			set
			{
				if ((this._Ply != value))
				{
					this._Ply = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this._LastModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defect", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Defect
		{
			get
			{
				return this._Defect;
			}
			set
			{
				if ((this._Defect != value))
				{
					this._Defect = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_CustLoc_User_UserLoc")]
	public partial class vw_CustLoc_User_UserLoc
	{
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private int _OrgID;
		
		private int _UserID;
		
		private System.Nullable<int> _UsrLocID;
		
		public vw_CustLoc_User_UserLoc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsrLocID", DbType="Int")]
		public System.Nullable<int> UsrLocID
		{
			get
			{
				return this._UsrLocID;
			}
			set
			{
				if ((this._UsrLocID != value))
				{
					this._UsrLocID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_CustOrg_Locs")]
	public partial class vw_CustOrg_Loc
	{
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Locs;
		
		public vw_CustOrg_Loc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locs", DbType="Int")]
		public System.Nullable<int> Locs
		{
			get
			{
				return this._Locs;
			}
			set
			{
				if ((this._Locs != value))
				{
					this._Locs = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_MasterOrg_Role")]
	public partial class vw_MasterOrg_Role
	{
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private int _OrgTypeId;
		
		private int _RoleId;
		
		public vw_MasterOrg_Role()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgTypeId", DbType="Int NOT NULL")]
		public int OrgTypeId
		{
			get
			{
				return this._OrgTypeId;
			}
			set
			{
				if ((this._OrgTypeId != value))
				{
					this._OrgTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityHistory")]
	public partial class ActivityHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ActivityID;
		
		private int _UserID;
		
		private string _UserText;
		
		private System.DateTime _ActDateTime;
		
		private System.Nullable<int> _ClaimID;
		
		private System.Nullable<int> _ClaimDetailID;
		
		private string _ClaimText;
		
		private string _FileName;
		
		private EntityRef<MasterActivity> _MasterActivity;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserTextChanging(string value);
    partial void OnUserTextChanged();
    partial void OnActDateTimeChanging(System.DateTime value);
    partial void OnActDateTimeChanged();
    partial void OnClaimIDChanging(System.Nullable<int> value);
    partial void OnClaimIDChanged();
    partial void OnClaimDetailIDChanging(System.Nullable<int> value);
    partial void OnClaimDetailIDChanged();
    partial void OnClaimTextChanging(string value);
    partial void OnClaimTextChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public ActivityHistory()
		{
			this._MasterActivity = default(EntityRef<MasterActivity>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					if (this._MasterActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserText", DbType="NVarChar(80)")]
		public string UserText
		{
			get
			{
				return this._UserText;
			}
			set
			{
				if ((this._UserText != value))
				{
					this.OnUserTextChanging(value);
					this.SendPropertyChanging();
					this._UserText = value;
					this.SendPropertyChanged("UserText");
					this.OnUserTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActDateTime
		{
			get
			{
				return this._ActDateTime;
			}
			set
			{
				if ((this._ActDateTime != value))
				{
					this.OnActDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ActDateTime = value;
					this.SendPropertyChanged("ActDateTime");
					this.OnActDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int")]
		public System.Nullable<int> ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					this.OnClaimIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimID = value;
					this.SendPropertyChanged("ClaimID");
					this.OnClaimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDetailID", DbType="Int")]
		public System.Nullable<int> ClaimDetailID
		{
			get
			{
				return this._ClaimDetailID;
			}
			set
			{
				if ((this._ClaimDetailID != value))
				{
					this.OnClaimDetailIDChanging(value);
					this.SendPropertyChanging();
					this._ClaimDetailID = value;
					this.SendPropertyChanged("ClaimDetailID");
					this.OnClaimDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimText", DbType="NVarChar(50)")]
		public string ClaimText
		{
			get
			{
				return this._ClaimText;
			}
			set
			{
				if ((this._ClaimText != value))
				{
					this.OnClaimTextChanging(value);
					this.SendPropertyChanging();
					this._ClaimText = value;
					this.SendPropertyChanged("ClaimText");
					this.OnClaimTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterActivity_ActivityHistory", Storage="_MasterActivity", ThisKey="ActivityID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MasterActivity MasterActivity
		{
			get
			{
				return this._MasterActivity.Entity;
			}
			set
			{
				MasterActivity previousValue = this._MasterActivity.Entity;
				if (((previousValue != value) 
							|| (this._MasterActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterActivity.Entity = null;
						previousValue.ActivityHistories.Remove(this);
					}
					this._MasterActivity.Entity = value;
					if ((value != null))
					{
						value.ActivityHistories.Add(this);
						this._ActivityID = value.ID;
					}
					else
					{
						this._ActivityID = default(int);
					}
					this.SendPropertyChanged("MasterActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ActivityHistory", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.ActivityHistories.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.ActivityHistories.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_ActivityLog")]
	public partial class vw_ActivityLog
	{
		
		private int _ID;
		
		private int _ActivityID;
		
		private int _UserID;
		
		private string _UserText;
		
		private System.DateTime _ActDateTime;
		
		private System.Nullable<int> _ClaimID;
		
		private System.Nullable<int> _ClaimDetailID;
		
		private string _ClaimText;
		
		private string _FileName;
		
		private string _Activity;
		
		public vw_ActivityLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this._ActivityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserText", DbType="NVarChar(80)")]
		public string UserText
		{
			get
			{
				return this._UserText;
			}
			set
			{
				if ((this._UserText != value))
				{
					this._UserText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActDateTime
		{
			get
			{
				return this._ActDateTime;
			}
			set
			{
				if ((this._ActDateTime != value))
				{
					this._ActDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int")]
		public System.Nullable<int> ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					this._ClaimID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDetailID", DbType="Int")]
		public System.Nullable<int> ClaimDetailID
		{
			get
			{
				return this._ClaimDetailID;
			}
			set
			{
				if ((this._ClaimDetailID != value))
				{
					this._ClaimDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimText", DbType="NVarChar(50)")]
		public string ClaimText
		{
			get
			{
				return this._ClaimText;
			}
			set
			{
				if ((this._ClaimText != value))
				{
					this._ClaimText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this._Activity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterOrg")]
	public partial class MasterOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private int _OrgTypeId;
		
		private System.Nullable<int> _SalespersonId;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Zip;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<CustomerLocation> _CustomerLocations;
		
		private EntitySet<Claim> _Claims;
		
		private EntityRef<MasterOrgType> _MasterOrgType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrgTypeIdChanging(int value);
    partial void OnOrgTypeIdChanged();
    partial void OnSalespersonIdChanging(System.Nullable<int> value);
    partial void OnSalespersonIdChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public MasterOrg()
		{
			this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
			this._Claims = new EntitySet<Claim>(new Action<Claim>(this.attach_Claims), new Action<Claim>(this.detach_Claims));
			this._MasterOrgType = default(EntityRef<MasterOrgType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgTypeId", DbType="Int NOT NULL")]
		public int OrgTypeId
		{
			get
			{
				return this._OrgTypeId;
			}
			set
			{
				if ((this._OrgTypeId != value))
				{
					if (this._MasterOrgType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrgTypeId = value;
					this.SendPropertyChanged("OrgTypeId");
					this.OnOrgTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonId", DbType="Int")]
		public System.Nullable<int> SalespersonId
		{
			get
			{
				return this._SalespersonId;
			}
			set
			{
				if ((this._SalespersonId != value))
				{
					this.OnSalespersonIdChanging(value);
					this.SendPropertyChanging();
					this._SalespersonId = value;
					this.SendPropertyChanged("SalespersonId");
					this.OnSalespersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrg_CustomerLocation", Storage="_CustomerLocations", ThisKey="ID", OtherKey="CustomerId")]
		public EntitySet<CustomerLocation> CustomerLocations
		{
			get
			{
				return this._CustomerLocations;
			}
			set
			{
				this._CustomerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrg_Claim", Storage="_Claims", ThisKey="ID", OtherKey="CustID")]
		public EntitySet<Claim> Claims
		{
			get
			{
				return this._Claims;
			}
			set
			{
				this._Claims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrgType_MasterOrg", Storage="_MasterOrgType", ThisKey="OrgTypeId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MasterOrgType MasterOrgType
		{
			get
			{
				return this._MasterOrgType.Entity;
			}
			set
			{
				MasterOrgType previousValue = this._MasterOrgType.Entity;
				if (((previousValue != value) 
							|| (this._MasterOrgType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterOrgType.Entity = null;
						previousValue.MasterOrgs.Remove(this);
					}
					this._MasterOrgType.Entity = value;
					if ((value != null))
					{
						value.MasterOrgs.Add(this);
						this._OrgTypeId = value.ID;
					}
					else
					{
						this._OrgTypeId = default(int);
					}
					this.SendPropertyChanged("MasterOrgType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrg = this;
		}
		
		private void detach_CustomerLocations(CustomerLocation entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrg = null;
		}
		
		private void attach_Claims(Claim entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrg = this;
		}
		
		private void detach_Claims(Claim entity)
		{
			this.SendPropertyChanging();
			entity.MasterOrg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterSetting")]
	public partial class MasterSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Setting;
		
		private string _Value;
		
		private string _Description;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSettingChanging(string value);
    partial void OnSettingChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public MasterSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setting", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Setting
		{
			get
			{
				return this._Setting;
			}
			set
			{
				if ((this._Setting != value))
				{
					this.OnSettingChanging(value);
					this.SendPropertyChanging();
					this._Setting = value;
					this.SendPropertyChanged("Setting");
					this.OnSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private int _OrgID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _SalespersonCode;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<UserLocation> _UserLocations;
		
		private EntitySet<ActivityHistory> _ActivityHistories;
		
		private EntityRef<MasterRole> _MasterRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSalespersonCodeChanging(string value);
    partial void OnSalespersonCodeChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public Users()
		{
			this._UserLocations = new EntitySet<UserLocation>(new Action<UserLocation>(this.attach_UserLocations), new Action<UserLocation>(this.detach_UserLocations));
			this._ActivityHistories = new EntitySet<ActivityHistory>(new Action<ActivityHistory>(this.attach_ActivityHistories), new Action<ActivityHistory>(this.detach_ActivityHistories));
			this._MasterRole = default(EntityRef<MasterRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._MasterRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonCode", DbType="NVarChar(6)")]
		public string SalespersonCode
		{
			get
			{
				return this._SalespersonCode;
			}
			set
			{
				if ((this._SalespersonCode != value))
				{
					this.OnSalespersonCodeChanging(value);
					this.SendPropertyChanging();
					this._SalespersonCode = value;
					this.SendPropertyChanged("SalespersonCode");
					this.OnSalespersonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserLocation", Storage="_UserLocations", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserLocation> UserLocations
		{
			get
			{
				return this._UserLocations;
			}
			set
			{
				this._UserLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ActivityHistory", Storage="_ActivityHistories", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ActivityHistory> ActivityHistories
		{
			get
			{
				return this._ActivityHistories;
			}
			set
			{
				this._ActivityHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterRole_Users", Storage="_MasterRole", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MasterRole MasterRole
		{
			get
			{
				return this._MasterRole.Entity;
			}
			set
			{
				MasterRole previousValue = this._MasterRole.Entity;
				if (((previousValue != value) 
							|| (this._MasterRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterRole.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._MasterRole.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("MasterRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLocations(UserLocation entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UserLocations(UserLocation entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_ActivityHistories(ActivityHistory entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_ActivityHistories(ActivityHistory entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Users_Role_Org")]
	public partial class vw_Users_Role_Org
	{
		
		private int _ID;
		
		private int _RoleID;
		
		private int _OrgID;
		
		private string _SalespersonCode;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Password;
		
		private string _RoleName;
		
		private System.Nullable<int> _OrgTypeId;
		
		private string _OrgType;
		
		private string _OrgName;
		
		private string _Country;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private string _LastModifiedByName;
		
		public vw_Users_Role_Org()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonCode", DbType="NVarChar(6)")]
		public string SalespersonCode
		{
			get
			{
				return this._SalespersonCode;
			}
			set
			{
				if ((this._SalespersonCode != value))
				{
					this._SalespersonCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgTypeId", DbType="Int")]
		public System.Nullable<int> OrgTypeId
		{
			get
			{
				return this._OrgTypeId;
			}
			set
			{
				if ((this._OrgTypeId != value))
				{
					this._OrgTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgType", DbType="VarChar(8)")]
		public string OrgType
		{
			get
			{
				return this._OrgType;
			}
			set
			{
				if ((this._OrgType != value))
				{
					this._OrgType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(80)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this._OrgName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this._LastModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByName", DbType="NVarChar(50)")]
		public string LastModifiedByName
		{
			get
			{
				return this._LastModifiedByName;
			}
			set
			{
				if ((this._LastModifiedByName != value))
				{
					this._LastModifiedByName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_StatusHistory_Usr")]
	public partial class vw_StatusHistory_Usr
	{
		
		private int _ID;
		
		private int _ClaimID;
		
		private System.Nullable<int> _OldStatusID;
		
		private int _NewStatusID;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private string _OldStatus;
		
		private string _NewStatus;
		
		private string _UserName;
		
		public vw_StatusHistory_Usr()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimID", DbType="Int NOT NULL")]
		public int ClaimID
		{
			get
			{
				return this._ClaimID;
			}
			set
			{
				if ((this._ClaimID != value))
				{
					this._ClaimID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatusID", DbType="Int")]
		public System.Nullable<int> OldStatusID
		{
			get
			{
				return this._OldStatusID;
			}
			set
			{
				if ((this._OldStatusID != value))
				{
					this._OldStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatusID", DbType="Int NOT NULL")]
		public int NewStatusID
		{
			get
			{
				return this._NewStatusID;
			}
			set
			{
				if ((this._NewStatusID != value))
				{
					this._NewStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this._LastModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatus", DbType="NVarChar(50)")]
		public string OldStatus
		{
			get
			{
				return this._OldStatus;
			}
			set
			{
				if ((this._OldStatus != value))
				{
					this._OldStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatus", DbType="NVarChar(50)")]
		public string NewStatus
		{
			get
			{
				return this._NewStatus;
			}
			set
			{
				if ((this._NewStatus != value))
				{
					this._NewStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_CustOrg_SalesUser")]
	public partial class vw_CustOrg_SalesUser
	{
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _SalespersonId;
		
		private int _OrgTypeId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _RoleID;
		
		private string _Email;
		
		private string _UserName;
		
		public vw_CustOrg_SalesUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonId", DbType="Int")]
		public System.Nullable<int> SalespersonId
		{
			get
			{
				return this._SalespersonId;
			}
			set
			{
				if ((this._SalespersonId != value))
				{
					this._SalespersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgTypeId", DbType="Int NOT NULL")]
		public int OrgTypeId
		{
			get
			{
				return this._OrgTypeId;
			}
			set
			{
				if ((this._OrgTypeId != value))
				{
					this._OrgTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Claim")]
	public partial class Claim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustID;
		
		private int _ClaimNo;
		
		private string _CustRefNo;
		
		private int _StatusID;
		
		private int _ShipToLocationID;
		
		private System.DateTime _ClaimDate;
		
		private int _BrandID;
		
		private int _SalespersonID;
		
		private int _AssignedTo;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _Archived;
		
		private EntitySet<ClaimDetail> _ClaimDetails;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<FileHeader> _FileHeaders;
		
		private EntitySet<StatusHistory> _StatusHistories;
		
		private EntityRef<MasterOrg> _MasterOrg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustIDChanging(int value);
    partial void OnCustIDChanged();
    partial void OnClaimNoChanging(int value);
    partial void OnClaimNoChanged();
    partial void OnCustRefNoChanging(string value);
    partial void OnCustRefNoChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnShipToLocationIDChanging(int value);
    partial void OnShipToLocationIDChanged();
    partial void OnClaimDateChanging(System.DateTime value);
    partial void OnClaimDateChanged();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnSalespersonIDChanging(int value);
    partial void OnSalespersonIDChanged();
    partial void OnAssignedToChanging(int value);
    partial void OnAssignedToChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnArchivedChanging(bool value);
    partial void OnArchivedChanged();
    #endregion
		
		public Claim()
		{
			this._ClaimDetails = new EntitySet<ClaimDetail>(new Action<ClaimDetail>(this.attach_ClaimDetails), new Action<ClaimDetail>(this.detach_ClaimDetails));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._FileHeaders = new EntitySet<FileHeader>(new Action<FileHeader>(this.attach_FileHeaders), new Action<FileHeader>(this.detach_FileHeaders));
			this._StatusHistories = new EntitySet<StatusHistory>(new Action<StatusHistory>(this.attach_StatusHistories), new Action<StatusHistory>(this.detach_StatusHistories));
			this._MasterOrg = default(EntityRef<MasterOrg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int NOT NULL")]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					if (this._MasterOrg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNo", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ClaimNo
		{
			get
			{
				return this._ClaimNo;
			}
			set
			{
				if ((this._ClaimNo != value))
				{
					this.OnClaimNoChanging(value);
					this.SendPropertyChanging();
					this._ClaimNo = value;
					this.SendPropertyChanged("ClaimNo");
					this.OnClaimNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustRefNo", DbType="NVarChar(30)")]
		public string CustRefNo
		{
			get
			{
				return this._CustRefNo;
			}
			set
			{
				if ((this._CustRefNo != value))
				{
					this.OnCustRefNoChanging(value);
					this.SendPropertyChanging();
					this._CustRefNo = value;
					this.SendPropertyChanged("CustRefNo");
					this.OnCustRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToLocationID", DbType="Int NOT NULL")]
		public int ShipToLocationID
		{
			get
			{
				return this._ShipToLocationID;
			}
			set
			{
				if ((this._ShipToLocationID != value))
				{
					this.OnShipToLocationIDChanging(value);
					this.SendPropertyChanging();
					this._ShipToLocationID = value;
					this.SendPropertyChanged("ShipToLocationID");
					this.OnShipToLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClaimDate
		{
			get
			{
				return this._ClaimDate;
			}
			set
			{
				if ((this._ClaimDate != value))
				{
					this.OnClaimDateChanging(value);
					this.SendPropertyChanging();
					this._ClaimDate = value;
					this.SendPropertyChanged("ClaimDate");
					this.OnClaimDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonID", DbType="Int NOT NULL")]
		public int SalespersonID
		{
			get
			{
				return this._SalespersonID;
			}
			set
			{
				if ((this._SalespersonID != value))
				{
					this.OnSalespersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalespersonID = value;
					this.SendPropertyChanged("SalespersonID");
					this.OnSalespersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTo", DbType="Int NOT NULL")]
		public int AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this.OnAssignedToChanging(value);
					this.SendPropertyChanging();
					this._AssignedTo = value;
					this.SendPropertyChanged("AssignedTo");
					this.OnAssignedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_ClaimDetail", Storage="_ClaimDetails", ThisKey="ID", OtherKey="ClaimID")]
		public EntitySet<ClaimDetail> ClaimDetails
		{
			get
			{
				return this._ClaimDetails;
			}
			set
			{
				this._ClaimDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_Comment", Storage="_Comments", ThisKey="ID", OtherKey="ClaimID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_FileHeader", Storage="_FileHeaders", ThisKey="ID", OtherKey="ClaimID")]
		public EntitySet<FileHeader> FileHeaders
		{
			get
			{
				return this._FileHeaders;
			}
			set
			{
				this._FileHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Claim_StatusHistory", Storage="_StatusHistories", ThisKey="ID", OtherKey="ClaimID")]
		public EntitySet<StatusHistory> StatusHistories
		{
			get
			{
				return this._StatusHistories;
			}
			set
			{
				this._StatusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterOrg_Claim", Storage="_MasterOrg", ThisKey="CustID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MasterOrg MasterOrg
		{
			get
			{
				return this._MasterOrg.Entity;
			}
			set
			{
				MasterOrg previousValue = this._MasterOrg.Entity;
				if (((previousValue != value) 
							|| (this._MasterOrg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterOrg.Entity = null;
						previousValue.Claims.Remove(this);
					}
					this._MasterOrg.Entity = value;
					if ((value != null))
					{
						value.Claims.Add(this);
						this._CustID = value.ID;
					}
					else
					{
						this._CustID = default(int);
					}
					this.SendPropertyChanged("MasterOrg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClaimDetails(ClaimDetail entity)
		{
			this.SendPropertyChanging();
			entity.Claim = this;
		}
		
		private void detach_ClaimDetails(ClaimDetail entity)
		{
			this.SendPropertyChanging();
			entity.Claim = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Claim = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Claim = null;
		}
		
		private void attach_FileHeaders(FileHeader entity)
		{
			this.SendPropertyChanging();
			entity.Claim = this;
		}
		
		private void detach_FileHeaders(FileHeader entity)
		{
			this.SendPropertyChanging();
			entity.Claim = null;
		}
		
		private void attach_StatusHistories(StatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Claim = this;
		}
		
		private void detach_StatusHistories(StatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Claim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterRole")]
	public partial class MasterRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private int _OrgTypeId;
		
		private int _SortOrder;
		
		private bool _ManageRole;
		
		private bool _ManageMaster;
		
		private bool _ManageUser;
		
		private bool _DeleteClaim;
		
		private bool _ViewActivity;
		
		private bool _ManageSetting;
		
		private bool _ArchiveClaim;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private bool _CanDelete;
		
		private EntitySet<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOrgTypeIdChanging(int value);
    partial void OnOrgTypeIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnManageRoleChanging(bool value);
    partial void OnManageRoleChanged();
    partial void OnManageMasterChanging(bool value);
    partial void OnManageMasterChanged();
    partial void OnManageUserChanging(bool value);
    partial void OnManageUserChanged();
    partial void OnDeleteClaimChanging(bool value);
    partial void OnDeleteClaimChanged();
    partial void OnViewActivityChanging(bool value);
    partial void OnViewActivityChanged();
    partial void OnManageSettingChanging(bool value);
    partial void OnManageSettingChanged();
    partial void OnArchiveClaimChanging(bool value);
    partial void OnArchiveClaimChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    #endregion
		
		public MasterRole()
		{
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgTypeId", DbType="Int NOT NULL")]
		public int OrgTypeId
		{
			get
			{
				return this._OrgTypeId;
			}
			set
			{
				if ((this._OrgTypeId != value))
				{
					this.OnOrgTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrgTypeId = value;
					this.SendPropertyChanged("OrgTypeId");
					this.OnOrgTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRole", DbType="Bit NOT NULL")]
		public bool ManageRole
		{
			get
			{
				return this._ManageRole;
			}
			set
			{
				if ((this._ManageRole != value))
				{
					this.OnManageRoleChanging(value);
					this.SendPropertyChanging();
					this._ManageRole = value;
					this.SendPropertyChanged("ManageRole");
					this.OnManageRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageMaster", DbType="Bit NOT NULL")]
		public bool ManageMaster
		{
			get
			{
				return this._ManageMaster;
			}
			set
			{
				if ((this._ManageMaster != value))
				{
					this.OnManageMasterChanging(value);
					this.SendPropertyChanging();
					this._ManageMaster = value;
					this.SendPropertyChanged("ManageMaster");
					this.OnManageMasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageUser", DbType="Bit NOT NULL")]
		public bool ManageUser
		{
			get
			{
				return this._ManageUser;
			}
			set
			{
				if ((this._ManageUser != value))
				{
					this.OnManageUserChanging(value);
					this.SendPropertyChanging();
					this._ManageUser = value;
					this.SendPropertyChanged("ManageUser");
					this.OnManageUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteClaim", DbType="Bit NOT NULL")]
		public bool DeleteClaim
		{
			get
			{
				return this._DeleteClaim;
			}
			set
			{
				if ((this._DeleteClaim != value))
				{
					this.OnDeleteClaimChanging(value);
					this.SendPropertyChanging();
					this._DeleteClaim = value;
					this.SendPropertyChanged("DeleteClaim");
					this.OnDeleteClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewActivity", DbType="Bit NOT NULL")]
		public bool ViewActivity
		{
			get
			{
				return this._ViewActivity;
			}
			set
			{
				if ((this._ViewActivity != value))
				{
					this.OnViewActivityChanging(value);
					this.SendPropertyChanging();
					this._ViewActivity = value;
					this.SendPropertyChanged("ViewActivity");
					this.OnViewActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageSetting", DbType="Bit NOT NULL")]
		public bool ManageSetting
		{
			get
			{
				return this._ManageSetting;
			}
			set
			{
				if ((this._ManageSetting != value))
				{
					this.OnManageSettingChanging(value);
					this.SendPropertyChanging();
					this._ManageSetting = value;
					this.SendPropertyChanged("ManageSetting");
					this.OnManageSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveClaim", DbType="Bit NOT NULL")]
		public bool ArchiveClaim
		{
			get
			{
				return this._ArchiveClaim;
			}
			set
			{
				if ((this._ArchiveClaim != value))
				{
					this.OnArchiveClaimChanging(value);
					this.SendPropertyChanging();
					this._ArchiveClaim = value;
					this.SendPropertyChanged("ArchiveClaim");
					this.OnArchiveClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterRole_Users", Storage="_Users", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.MasterRole = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.MasterRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Yr_Claims_Items")]
	public partial class vw_Yr_Claims_Item
	{
		
		private System.Nullable<int> _Yr;
		
		private int _ClaimId;
		
		private int _ClaimNo;
		
		private System.Nullable<int> _Items;
		
		public vw_Yr_Claims_Item()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yr", DbType="Int")]
		public System.Nullable<int> Yr
		{
			get
			{
				return this._Yr;
			}
			set
			{
				if ((this._Yr != value))
				{
					this._Yr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimId", DbType="Int NOT NULL")]
		public int ClaimId
		{
			get
			{
				return this._ClaimId;
			}
			set
			{
				if ((this._ClaimId != value))
				{
					this._ClaimId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNo", DbType="Int NOT NULL")]
		public int ClaimNo
		{
			get
			{
				return this._ClaimNo;
			}
			set
			{
				if ((this._ClaimNo != value))
				{
					this._ClaimNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items", DbType="Int")]
		public System.Nullable<int> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				if ((this._Items != value))
				{
					this._Items = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterBrand")]
	public partial class MasterBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<int> _VendorID;
		
		private int _SortOrder;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private EntitySet<MasterInventory> _MasterInventories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnVendorIDChanging(System.Nullable<int> value);
    partial void OnVendorIDChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public MasterBrand()
		{
			this._MasterInventories = new EntitySet<MasterInventory>(new Action<MasterInventory>(this.attach_MasterInventories), new Action<MasterInventory>(this.detach_MasterInventories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterBrand_MasterInventory", Storage="_MasterInventories", ThisKey="ID", OtherKey="BrandId")]
		public EntitySet<MasterInventory> MasterInventories
		{
			get
			{
				return this._MasterInventories;
			}
			set
			{
				this._MasterInventories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MasterInventories(MasterInventory entity)
		{
			this.SendPropertyChanging();
			entity.MasterBrand = this;
		}
		
		private void detach_MasterInventories(MasterInventory entity)
		{
			this.SendPropertyChanging();
			entity.MasterBrand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Brand_Items")]
	public partial class vw_Brand_Item
	{
		
		private int _ID;
		
		private string _Title;
		
		private int _SortOrder;
		
		private System.Nullable<int> _Items;
		
		private System.Nullable<int> _VendorID;
		
		public vw_Brand_Item()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items", DbType="Int")]
		public System.Nullable<int> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				if ((this._Items != value))
				{
					this._Items = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this._VendorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Claim_Master_User_Loc")]
	public partial class vw_Claim_Master_User_Loc
	{
		
		private int _ID;
		
		private int _CustID;
		
		private int _ClaimNo;
		
		private string _CustRefNo;
		
		private int _StatusID;
		
		private int _ShipToLocationID;
		
		private string _Location;
		
		private string _LocationCode;
		
		private System.DateTime _ClaimDate;
		
		private int _BrandID;
		
		private string _Brand;
		
		private int _SalespersonID;
		
		private int _AssignedTo;
		
		private string _AssignedToVal;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private string _CustOrg;
		
		private string _SalespersonName;
		
		private string _Status;
		
		private System.Nullable<int> _VendorID;
		
		private string _VendorName;
		
		private bool _Archived;
		
		public vw_Claim_Master_User_Loc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int NOT NULL")]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this._CustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNo", DbType="Int NOT NULL")]
		public int ClaimNo
		{
			get
			{
				return this._ClaimNo;
			}
			set
			{
				if ((this._ClaimNo != value))
				{
					this._ClaimNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustRefNo", DbType="NVarChar(30)")]
		public string CustRefNo
		{
			get
			{
				return this._CustRefNo;
			}
			set
			{
				if ((this._CustRefNo != value))
				{
					this._CustRefNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToLocationID", DbType="Int NOT NULL")]
		public int ShipToLocationID
		{
			get
			{
				return this._ShipToLocationID;
			}
			set
			{
				if ((this._ShipToLocationID != value))
				{
					this._ShipToLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(80)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(20)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClaimDate
		{
			get
			{
				return this._ClaimDate;
			}
			set
			{
				if ((this._ClaimDate != value))
				{
					this._ClaimDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this._BrandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonID", DbType="Int NOT NULL")]
		public int SalespersonID
		{
			get
			{
				return this._SalespersonID;
			}
			set
			{
				if ((this._SalespersonID != value))
				{
					this._SalespersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTo", DbType="Int NOT NULL")]
		public int AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this._AssignedTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedToVal", DbType="NVarChar(50)")]
		public string AssignedToVal
		{
			get
			{
				return this._AssignedToVal;
			}
			set
			{
				if ((this._AssignedToVal != value))
				{
					this._AssignedToVal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this._LastModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustOrg", DbType="NVarChar(80)")]
		public string CustOrg
		{
			get
			{
				return this._CustOrg;
			}
			set
			{
				if ((this._CustOrg != value))
				{
					this._CustOrg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonName", DbType="NVarChar(50)")]
		public string SalespersonName
		{
			get
			{
				return this._SalespersonName;
			}
			set
			{
				if ((this._SalespersonName != value))
				{
					this._SalespersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this._VendorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(80)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Claim_Dashboard")]
	public partial class vw_Claim_Dashboard
	{
		
		private int _ID;
		
		private int _CommentsExist;
		
		private int _FilesHExist;
		
		private int _CustID;
		
		private string _CustOrg;
		
		private int _ClaimNo;
		
		private string _CustRefNo;
		
		private int _StatusID;
		
		private string _Status;
		
		private System.DateTime _ClaimDate;
		
		private string _ClaimDateOnly;
		
		private int _AssignedTo;
		
		private int _LastModifiedBy;
		
		private System.DateTime _LastModifiedDate;
		
		private int _SalespersonID;
		
		private int _BrandID;
		
		private bool _Archived;
		
		private string _BrandName;
		
		private System.Nullable<int> _VendorID;
		
		private int _ShipToLocationID;
		
		private string _ShipToLoc;
		
		private string _ShipToCode;
		
		private string _Salesperson;
		
		private string _AssignToName;
		
		public vw_Claim_Dashboard()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsExist", DbType="Int NOT NULL")]
		public int CommentsExist
		{
			get
			{
				return this._CommentsExist;
			}
			set
			{
				if ((this._CommentsExist != value))
				{
					this._CommentsExist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilesHExist", DbType="Int NOT NULL")]
		public int FilesHExist
		{
			get
			{
				return this._FilesHExist;
			}
			set
			{
				if ((this._FilesHExist != value))
				{
					this._FilesHExist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int NOT NULL")]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this._CustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustOrg", DbType="NVarChar(80)")]
		public string CustOrg
		{
			get
			{
				return this._CustOrg;
			}
			set
			{
				if ((this._CustOrg != value))
				{
					this._CustOrg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNo", DbType="Int NOT NULL")]
		public int ClaimNo
		{
			get
			{
				return this._ClaimNo;
			}
			set
			{
				if ((this._ClaimNo != value))
				{
					this._ClaimNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustRefNo", DbType="NVarChar(30)")]
		public string CustRefNo
		{
			get
			{
				return this._CustRefNo;
			}
			set
			{
				if ((this._CustRefNo != value))
				{
					this._CustRefNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClaimDate
		{
			get
			{
				return this._ClaimDate;
			}
			set
			{
				if ((this._ClaimDate != value))
				{
					this._ClaimDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDateOnly", DbType="VarChar(10)")]
		public string ClaimDateOnly
		{
			get
			{
				return this._ClaimDateOnly;
			}
			set
			{
				if ((this._ClaimDateOnly != value))
				{
					this._ClaimDateOnly = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTo", DbType="Int NOT NULL")]
		public int AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this._AssignedTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this._LastModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this._LastModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonID", DbType="Int NOT NULL")]
		public int SalespersonID
		{
			get
			{
				return this._SalespersonID;
			}
			set
			{
				if ((this._SalespersonID != value))
				{
					this._SalespersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this._BrandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit NOT NULL")]
		public bool Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(50)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int")]
		public System.Nullable<int> VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this._VendorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToLocationID", DbType="Int NOT NULL")]
		public int ShipToLocationID
		{
			get
			{
				return this._ShipToLocationID;
			}
			set
			{
				if ((this._ShipToLocationID != value))
				{
					this._ShipToLocationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToLoc", DbType="NVarChar(80)")]
		public string ShipToLoc
		{
			get
			{
				return this._ShipToLoc;
			}
			set
			{
				if ((this._ShipToLoc != value))
				{
					this._ShipToLoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToCode", DbType="NVarChar(20)")]
		public string ShipToCode
		{
			get
			{
				return this._ShipToCode;
			}
			set
			{
				if ((this._ShipToCode != value))
				{
					this._ShipToCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salesperson", DbType="NVarChar(50)")]
		public string Salesperson
		{
			get
			{
				return this._Salesperson;
			}
			set
			{
				if ((this._Salesperson != value))
				{
					this._Salesperson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignToName", DbType="NVarChar(50)")]
		public string AssignToName
		{
			get
			{
				return this._AssignToName;
			}
			set
			{
				if ((this._AssignToName != value))
				{
					this._AssignToName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_ClaimWithItemDetails")]
	public partial class vw_ClaimWithItemDetail
	{
		
		private int _ClaimNo;
		
		private string _CustRefNo;
		
		private System.DateTime _ClaimDate;
		
		private string _CustOrgCode;
		
		private string _CustOrgName;
		
		private string _Brand;
		
		private string _ItemNo;
		
		private string _Defect;
		
		private string _Description;
		
		public vw_ClaimWithItemDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNo", DbType="Int NOT NULL")]
		public int ClaimNo
		{
			get
			{
				return this._ClaimNo;
			}
			set
			{
				if ((this._ClaimNo != value))
				{
					this._ClaimNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustRefNo", DbType="NVarChar(30)")]
		public string CustRefNo
		{
			get
			{
				return this._CustRefNo;
			}
			set
			{
				if ((this._CustRefNo != value))
				{
					this._CustRefNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClaimDate
		{
			get
			{
				return this._ClaimDate;
			}
			set
			{
				if ((this._ClaimDate != value))
				{
					this._ClaimDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustOrgCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CustOrgCode
		{
			get
			{
				return this._CustOrgCode;
			}
			set
			{
				if ((this._CustOrgCode != value))
				{
					this._CustOrgCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustOrgName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string CustOrgName
		{
			get
			{
				return this._CustOrgName;
			}
			set
			{
				if ((this._CustOrgName != value))
				{
					this._CustOrgName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defect", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Defect
		{
			get
			{
				return this._Defect;
			}
			set
			{
				if ((this._Defect != value))
				{
					this._Defect = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

@model CPM.DAL.ClaimDetail
@using CPM.Helper
@using System.Collections
<script type="text/javascript" language="javascript">
    //function to init auto-complete based on a brand selected.
    function fillItemsForBrand(BrandID, reset) {
        try {//Proceed only if jQuery is defined - to avoid issues with the file upload
            var url = '@Defaults.commonRoot/Lookup?id=Item1&extras=' + BrandID; //$('#BrandID', window.parent.document).val();

            if (reset)//Reset the id & txtbox
            { $(txtBox).val(''); $(idBox).val(''); }

            //renderAutoComplete('@Defaults.commonRoot/Lookup?id=Item', '#ItemID', '#ItemCode');
            $(txtBox).autocomplete({
                source: url //'@Defaults.commonRoot/Lookup?id=Item1',
            , minLength: autoCompMinLen
            , select: function (event, ui) { if (ui.item.id == null) event.preventDefault(); else { setItem(ui.item); } }
            , focus: function (event, ui) { if (ui.item.id == null) event.preventDefault(); }
            })//HT: Format the items being displayed Ref: http://jqueryui.com/demos/autocomplete/#custom-data
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                return $("<li></li>")
				//.data("item.autocomplete", item)
				.append("<a>" + item.value + ((item.descr != null) ? " (" + item.descr + ")</a>" : ""))
				.appendTo(ul);
            };

            //Attach onblur event to empty ID field
            $(txtBox).blur(function () { checkReq(txtBox, idBox); });
            //Set initial value (null if it was defaulted to 0) and set tooltip
            var val = $(idBox).val(); $(idBox).val((val == "0") ? "" : val); //"#ItemID"
            $(txtBox).attr('title', 'Start typing to search or type space twice to view all');
            //$(idBox).css("display", "none");

            setFocus("ItemCode"); //Set focus after the code textbox has been autocompleted - above            
        } //);
        catch (err) { } /* Avoid disturbance because of obsolete error */
        /* http://jqueryui.com/demos/autocomplete/#custom-data */
    }

    var autoCompMinLen = 2;
    var txtBox = "#ItemCode", idBox = "#ItemID";
    try {//Proceed only if jQuery is defined - to avoid issues with the file upload
        $().ready(function() {
            var BrandID = $('#BrandID'); //, window.parent.document
            BrandID = (BrandID != null) ? BrandID.val() : "";
            fillItemsForBrand(BrandID, false);
            // Ensure numeric (make sure jquery.numeric.js is included)
            $("#TDRemaining").numeric();
            $("#TDOriginal").numeric();
            $("#CurrentPrice").numeric();
            $("#CurrentCost").numeric();
            setFocus("ItemCode");
        });
    } catch (err) { ; } 
</script>
@{string showToInternal = !_Session.IsOnlyCustomer ? "" : "style='display:none'"; }
@using (Html.BeginForm("Items", "Claim", new { ClaimGUID = Model.ClaimGUID }, FormMethod.Post, new { id = "frmItems", enctype = "multipart/form-data" }))
{
<table border="0">
<tr><td>@Html.ValidationSummary(true) @Html.HiddenFor(c => c.ID) @Html.HiddenFor(c => c.ClaimID) &nbsp;</td></tr>
    <tr>
        <td align="left">
            <table align="right" cellpadding="2" cellspacing="2" border="0">@*HT: This table is required to left-align*@
                <tr>
                    <td align="right" nowrap="nowrap">Item Code</td>
                    <td align="left" nowrap="nowrap" colspan="2">
                        @Html.TextBoxFor(c => c.ItemCode, new { @class = "required" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "ItemCode"))&nbsp;@Html.ValidationMessageFor(c => c.ItemID)@Html.HiddenFor(c => c.ItemID)
                    </td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td align="right" nowrap="nowrap">Description</td>
                    <td colspan="3" nowrap="nowrap">
                        @Html.CustomTextAreaFor(c => c.Description, 2, 20, new { @style = "width:97%", @onblur = "return trimTextAreaMaxLen(this);" })
                    </td>
                </tr>
                <tr>
                    <td align="right" nowrap="nowrap">Defect</td>
                    <td>
                        @Html.DropDownListFor(c => c.NatureOfDefect, new SelectList((IEnumerable)ViewData["Defects"], "id", "value", Model.NatureOfDefect), new { @class = "dropDown", @onchange = "setDDLtext('NatureOfDefect', 'Defect');" })
                        @* For future: @Html.GroupDropList("NatureOfDefect", (IEnumerable<GroupDropListItem>)ViewData["Defects"], Model.NatureOfDefect, new { @class = "dropDown", @onchange = "setDDLtext('NatureOfDefect', 'Defect');" })%>*@
                        @*http://forums.asp.net/t/1599009.aspx/1?Dropdownlist+Optgroup+with+mvc*@
                        @Html.HiddenFor(c => c.Defect)
                    </td>
                    <td colspan="2" nowrap="nowrap">@Html.ValidationMessageFor(c => c.NatureOfDefect)</td>
                </tr>
                <tr>
                    <td align="right" nowrap="nowrap" valign="top">Remaining TD(32nds)</td>
                    <td nowrap="nowrap" valign="top">@Html.TextBoxFor(c => c.TDRemaining, new { @onblur = "autoCalc(this)" })<br />
                    @Html.ValidationMessageFor(c => c.TDRemaining)
                    </td>
                    <td align="right" nowrap="nowrap" @Html.Raw(showToInternal) valign="top">Original TD(32nds)</td>
                    <td @Html.Raw(showToInternal) nowrap="nowrap" valign="top">@Html.TextBoxFor(c => c.TDOriginal, new { @onblur = "autoCalc(this)" })<br />
                        @Html.ValidationMessageFor(c => c.TDOriginal)
                    </td>
                </tr>
                <tr>
                    <td align="right"></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td align="right" nowrap="nowrap" valign="top">Serial #</td>
                    <td nowrap="nowrap">@Html.TextBoxFor(c => c.Serial)<br />@Html.ValidationMessageFor(c => c.Serial)
                    </td>
                    <td align="right" nowrap="nowrap" valign="top">DOT #</td>
                    <td nowrap="nowrap" valign="top">
                        @Html.TextBoxFor(c => c.DOT)
                        <br />
                        @Html.ValidationMessageFor(c => c.DOT)
                    </td>
                </tr>                
                <tr>
                    <td align="right"></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr @Html.Raw(showToInternal)>
                    <td align="right" nowrap="nowrap" valign="top">Current Price</td>
                    <td nowrap="nowrap" valign="top">
                        @*HT: Cannot use <= Html.TextBoxFor(c => c.CurrentPrice,.ToString("#0.00"), new { @onblur = "autoCalc()" })%> because - SO: 3734829/datetime-field-and-html-textboxfor-helper-how-to-use-it-correctly*@
                        @Html.TextBox("CurrentPrice", Model.CurrentPrice.ToString("#0.00"), new { @onblur = "autoCalc(this)" })
                        <br />
                        @Html.ValidationMessageFor(c => c.CurrentPrice)
                    </td>
                    <td align="right" nowrap="nowrap" valign="top">Current Cost</td>
                    <td nowrap="nowrap" valign="top">
                        @Html.TextBox("CurrentCost", Model.CurrentCost.ToString("#0.00"), new { @onblur = "autoCalc(this)" })
                        <br />
                        @Html.ValidationMessageFor(c => c.CurrentCost)
                    </td>
                </tr>
                <tr>
                    <td align="right" nowrap="nowrap">Credit Amount</td>
                    <td>
                        @Html.TextBox("CreditAmt1", Model.CreditAmt1.ToString("#0.00"), new { @readonly = "readonly", @style = "border: none;" })
                        @*, @onblur = "autoCalc()"*@
                    </td>
                    <td align="right" nowrap="nowrap" @Html.Raw(showToInternal)>Invoice Amount</td>
                    <td @Html.Raw(showToInternal)>
                        @Html.TextBox("InvoiceAmt1", Model.InvoiceAmt1.ToString("#0.00"), new { @readonly = "readonly", @style = "border: none;" })
                        @*, @onblur = "autoCalc()"*@
                    </td>
                </tr>
                <tr>
                    <td align="right"></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr @*@Html.Raw(showToInternal)*@>
                    <td align="right">Internal note</td>
                    <td colspan="3">
                    @if (_Session.IsOnlyCustomer){@Html.Label(Model.Note??"(empty)")}
                       else {@Html.CustomTextAreaFor(c => c.Note, 2, 50, new { @style = "width:99%", @onblur = "return trimTextAreaMaxLen(this);" })}
                    </td>
                </tr>
                <tr>
                    <td nowrap="nowrap" valign="middle" colspan="4" align="right">
                        <table style="display:inline"><tr><td>[</td>
                        @if (/*Model.ClaimID > Defaults.Integer && */(Model.ID != Defaults.Integer || (Model.aDFiles != null && Model.aDFiles.Count > 0)))
                        {
                             <td>@Html.Raw(Defaults.clipImg)</td>
                             <td>
                             <div class="dDialog uline" onclick="javascript:openWin('@Url.Action("FilesDetail", "Claim", new { ClaimDetailID = Model.ID, ClaimGUID = Model.ClaimGUID })',450,650);">Attach a file </div>
                             </td>
                        }
                        else if (/*Model.ClaimID > Defaults.Integer && */ Model.ID == Defaults.Integer)
                        { <td class="small">save item to enable file upload</td> }
                        else
                        { <td class="small">save claim to enable file upload</td> }
                        <td>]</td></tr></table>
                    </td>                    
                </tr>
                <tr>
                    <td align="center" colspan="4">
                        @Html.HiddenFor(cd => cd.ClaimGUID)
                        <input type="submit" value="Save" class="button" onclick="setDDLtext('NatureOfDefect', 'Defect');" />
                        <input id="btnReset" type="reset" value="Cancel" class="button" onclick="reloadItm();" />
                        @*onclick="window.location.href='@Url.Action("Items",new {ClaimID = Model.ClaimID})'" />*@
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>
}

@using CPM.Helper
    <script type="text/javascript" language="javascript" defer="defer">    
    var IsEditMode = false;
    var NextNewFileID = -1;
    var filesHeaderModel = function () {
        var self = this;
        
        self.emptyFile = ko.observable();

        self.fileToAdd = ko.observable();
        self.allFiles = ko.observableArray(); // Initial items
        self.selectedFile = ko.observable(); // Initial selection
        
        self.TriggerOpenWin = function (fileFH) {
            openWin("@Url.Action("GetFile", "Claim")?" + fileFH.CodeStr,1,1);
        }
        
        self.setEdited = function (file) {
            file._Edited(!file._Added()); //alert(ko.mapping.toJSON(ko.mapping.fromJS(new Date())()));
            file.PostedOn(Date111); //Date111 ko.mapping.fromJS(new Date())
        }
        self.setEditedFlag = function (file) {
            file._Edited(!file._Added());
            file.LastModifiedDate = Date111;
        }
        self.addFile = function (file) {
            if (file.FileName == null || file.FileName == "")
                {
                   //http://knockoutjs.com/documentation/event-binding.html
                   alert("Please select a file to upload"); return false; 
                }
            else {
                if (!IsEditMode) {
                    file.ID = NextNewFileID;
                    self.allFiles.push(file); // self.allItems.push(ko.toJS(item));
                    NextNewFileID = NextNewFileID - 1;
                    self.emptyFile.ID = NextNewFileID; // NOT WORKING as expected
                } //cloneObservable
                else {/* Editmode Handled by KO */}
            }
            return true; // for ajax submit
        };

        self.removeSelected = function (file) {
            if (file != null)
            {
                file._Deleted(true);
                if (file._Added()) {
                    file._Added(false);
                    self.allFiles.remove(file);
                }
            }            
        };

        self.unRemoveSelected = function (file) {
            if (file != null)
            {
                file._Deleted(false);
            }
        };


        self.cancelFile = function (file) {
            IsEditMode = false;
            self.fileToAdd(cloneObservable(self.emptyFile));            
        };

        self.saveToServer = function () {
            ko.utils.postJson(location.href, { files: ko.mapping.toJS(self.allFiles) }); //ko.toJSON(self.allFiles)
            return false;
        }
    };

 var viewModelFH = new filesHeaderModel();
 function createFilesHeaderKO()
 {        
        $.getJSON('@Url.Action("FilesKOVM", "Claim", new { ClaimGUID = "" })',
         function (data) {
             if (data.FileToAdd.ID != -1) data.FileToAdd.ID = NextNewFileID;

             viewModelFH.emptyFile = data.EmptyFileHeader; // THIS SHUD NOT BE AN OBSERVABLE
             viewModelFH.fileToAdd(data.FileToAdd);             

             viewModelFH.allFiles = ko.mapping.fromJS(data.AllFiles);              
             viewModelFH.FileTypes = ko.mapping.fromJS(data.FileTypes);
             //alert('Claim-FilesHeader');
             ko.applyBindings(viewModelFH, document.getElementById("divFiles"));
         });
 }
      
    // Put script at bottom to avoid early-references
    $(document).ready(function () {
        setFocus("Comment");        
        createFilesHeaderKO();
    });

    </script>    
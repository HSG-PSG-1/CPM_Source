@model CPM.DAL.Users
@using System.Web.Mvc
@using CPM.Services
@using CPM.Helper
@using System.Collections
@{ ViewBag.Title = "Add / Edit"; Layout = Defaults.masterLayout;}
@section HeadContent {
    <style>
        .ui-autocomplete-loading
        {
            background: white url('http://jqueryui.com/demos/autocomplete/images/ui-anim_basic_16x16.gif') right center no-repeat;
        }
    </style>
    <script type="text/javascript">
        var validator;
        function setupValidation() {//http://docs.jquery.com/Plugins/Validation/validate#options
            // validate signup form on keyup and submit
            validator = $("#frmUsr").validate({
                ignore: ".ignore"//set this class
                , @Defaults.validatorJQsetting
                //, onfocusout: function (element) { $(element).valid(); }  SO: 8045731
                , rules: {
                    //Email: "required" or required: true, 
                    Email: {
                        remote: {
                            url: '@Url.Action("Validate", "Common", new { src = "UserEmail" })', //, extras=Model.EmailOLD
                            data: { term: function () {//Remove cached SO: 1564711
                                /*$("#Email").removeData("previousValue");HT:CAUTION - will prevent form submission!
                                https://github.com/jzaefferer/jquery-validation/issues/58*/
                                //FIX: SO: 7329125/jquery-validate-remote-is-failing-cant-submit-form
                                return $("#Email").val();
                            },
                                extras: function () { return $("#EmailOLD").val(); }
                            }
                        }
                    }
                }
            , messages: { Email: { remote: "Duplicate email found"}/*, OrgName: "This field is required."*/ }
                // the errorPlacement has to take the table layout into account 
                , errorPlacement: function (error, element) {
                    if (element.is(":radio")) error.appendTo(element.parent().next().next());
                    else if (element.is(":checkbox")) error.appendTo(element.next());
                    else error.appendTo(element.parent()); //.next()
                }
                //MORE for future: http://docs.jquery.com/Plugins/Validation/validate#options
                //, invalidHandler: function(form, validator) { alert(validator.numberOfInvalids()); }
            });        

        }
        function checkAndSubmit() {
            document.getElementById('chkDone').checked = true;//For debug - alert('e:' + $("#frmUsr").validate().numberOfInvalids()); //validator.defaultShowErrors();
            return true;
        }        
    </script>
}
@{ bool IsEditMode = bool.Parse(ViewData["IsEditMode"].ToString());
   string opr = IsEditMode ? "Edit" : "Add New";
   bool hasbeenSalesperson = (Model.RoleID == (int)SecurityService.Roles.Sales || !string.IsNullOrEmpty(Model.SalespersonCode));
}
@using (Html.BeginForm("AddEdit", "Users", new { id = Model.ID }, FormMethod.Post, new { @id = "frmUsr", @name = "frmUsr" }))
{
    <table width="100%">
        <tr>
            <td>
                <b class="smallHeading">@opr User</b>
                <div style="padding: 1px; text-align: right;">
                    <input type="submit" id="btnSubmit" value="Save" class="button" onclick="return checkAndSubmit();" /><input
                        type="checkbox" id="chkDone" name="chkDone" style="display: none" />
                    &nbsp;<input type="reset" value="Cancel" class="button" onclick="window.location.href='@Url.Action("List")'" />
                    @*Loc Link \ Unlink data*@
                    <input style="display:none" id="UnlinkedLoc" name="UnlinkedLoc" type="text" value="@(ViewData["UnlinkedLoc"] ?? "").ToString()" />
                    <input style="display:none" id="LinkedLoc" name="LinkedLoc" type="text" value="@(ViewData["LinkedLoc"] ?? "").ToString()" />
                    @*Loc Link \ Unlink data*@
                </div>@Html.ValidationSummary(true)
            </td>
        </tr>
        <tr>
            <td>
                <div id="tabs">
                    <ul>
                        <li><a href="#Details"><span>Details</span></a></li>
                        <li><a href="#Locations"><span>Locations</span></a></li>
                    </ul>
                    <div id="Details">
                        <table cellpadding="2" cellspacing="2" style="width: 50%" id="tblUsrAddEdit">
                            <tr>
                                <td class="rtsqz">
                                    @Html.LabelFor(model => model.Name)
                                </td>
                                <td colspan="3">
                                    @Html.CustomTextBoxFor(model => model.Name, new { @autofocus = "autofocus" })
                                    @Html.ValidationMessageFor(model => model.Name)
                                </td>
                            </tr>
                            <tr>
                                <td class="rtsqz">
                                    @Html.LabelFor(model => model.RoleID)
                                </td>
                                <td>
                                    @(Html.DropDownListFor(model => model.RoleID, new SelectList((IEnumerable)ViewData["Roles"], "ID", "TEXT", Model.RoleID), new
                {
                    @class = "dropDown required",
                    @onmouseup = "fillOrgs(true);" // alert(this.selectedIndex + ':' + $(this).attr('oldindex'));
                }))
                                    @Html.ValidationMessageFor(model => model.RoleID)
                                    @Html.HiddenFor(model => model.OrgType, new { @class = "ignore" })
                                </td>
                                <td align="right" class="tdSalesperson">
                                    @Html.LabelFor(model => model.SalespersonCode)
                                </td>
                                <td class="tdSalesperson">
                                    @if (hasbeenSalesperson)
                                    {//Make it readonly for existing SPSN
@*Html.Raw("&nbsp;<i>" + Model.SalespersonCode + "</i>");*@
                                        @Html.TextBoxFor(u => u.SalespersonCode, new { @disabled = "disabled" })
                                        @Html.HiddenFor(u => u.SalespersonCode)
                                    }
                                    else
                                    {
                                        @Html.CustomTextBoxFor(model => model.SalespersonCode, new { })
                                    }
                                    @Html.ValidationMessageFor(model => model.SalespersonCode)
                                </td>
                            </tr>
                            <tr>
                                <td class="rtsqz">
                                    @Html.LabelFor(model => model.OrgID)
                                </td>
                                <td colspan="3">
                                    @Html.TextBox("OrgName", Model.OrgName, new { @class = "required", @style = "width:200px", @onblur = "showHideLocations(true);" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "OrgName"))@Html.HiddenFor(model => model.OrgID)@Html.HiddenFor(model => model.OriOrgId)@Html.ValidationMessageFor(model => model.OrgID)
                                </td>
                            </tr>
                            <tr>
                                <td class="rtsqz">
                                    @Html.LabelFor(model => model.Email)
                                </td>
                                <td colspan="3">
                                    @Html.CustomTextBoxFor(model => model.Email, new { @class = "email", @style = "width:200px" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                    @Html.TextBoxFor(model => model.EmailOLD, new { @style = "display:none;" })
                                </td>
                            </tr>
                            <tr>
                                <td class="rtsqz">
                                    @Html.LabelFor(model => model.Password)
                                </td>
                                <td colspan="3">
                                    @Html.CustomTextBoxFor(model => model.Password, new { })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </td>
                            </tr>
                            @if (IsEditMode)
                            { 
                                <tr>
                                    <td colspan="4" nowrap="nowrap">
                                        <img src="@Url.Content("~/Content/Images/spacer.gif")" height="1px" width="700px" /><br />
                                        [<i>@Html.LabelFor(model => model.LastModifiedBy)
                                            :
                                            @Model.LastModifiedByVal
                                            @Html.HiddenFor(model => model.LastModifiedByVal, new { @class = "ignore" })
                                            &nbsp;&nbsp;&nbsp;
                                            @Html.LabelFor(model => model.LastModifiedDate)
                                            :
                                            @Model.LastModifiedDate.ToString(Defaults.dtFormat, Defaults.ci)
                                            @Html.Hidden("LastModifiedDate", Model.LastModifiedDate.ToString("dd-MMM-yyyy hh:mm:ss"),
                        new { @class = "ignore" })
                                        </i>]
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                    <div id="Locations" style="height: 350px; overflow: auto">
                        <div id="tbLocations">
                            @*Try- http://weblogs.asp.net/nmarun/archive/2010/03/13/asp-net-mvc-2-model-binding-for-a-collection.aspx
                        Not working? SO: 3843209/why-isnt-mvc-binding-my-nested-collection
                        @Html.EditorFor(model => model.UserLocations, "UserLocation")   *@ @*WORKING: SO: 5436639/asp-mvc-how-to-create-editor-for-model-which-have-children-elements -@Html.RenderPartial("UserLocation", Model.UserLocations);*@
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
}
<script type="text/javascript">
        function checkReq1(ctrl, impactCtrl) { if (!(ctrl.value.length > 0)) $("#" + impactCtrl).val(''); }

        function fillOrgs(reset) {
            var ddl = document.getElementById("RoleID");
            var pos = (ddl.selectedIndex > 0)?ddl.selectedIndex:0;
            //if(this.selectedIndex != $(this).attr('oldindex'))
            doOrgsDDL(ddl.options[pos].value, reset);//refresh Orgs dll
            showSalesperson();//show or hide sp row
        }

        function doOrgsDDL(RoleId, reset) {
            if (reset) { $("#OrgID").val(''); $("#OrgName").val(''); }
            var urlPath = "@Defaults.commonRoot/Lookup?id=@LookupService.Source.Org.ToString()" + 
            "&extras=" + RoleId;
            var idBox = "#OrgID", txtBox = "#OrgName";
            renderAutoComplete(urlPath, idBox, txtBox);//refresh the autocomplete
            //Need to have a custom select
            $(txtBox).bind( "autocompleteselect", function(event, ui) {
            //set value if a valid item is selected
            if (ui.item.id == null) { event.preventDefault(); } 
            else log(ui.item, idBox);$("#OrgType").val(ui.item.OrgTypeId);});
            
            showHideLocations(false);//Disable Locations tab until a valid Customer ORg is selected
        }
        
        //Caching: http://developwithstyle.com/articles/2010/05/14/jquery-ui-autocomplete-is-it-any-good.html
        $().ready(function() {
            $("#tblUsrAddEdit").tableNav();
            $("#tabs").tabs({ 
            /*cache: true, spinner: 'Loading...', ajaxOptions: { cache: false },
            http://jqueryui.com/upgrade-guide/1.9/#deprecated-ajaxoptions-and-cache-options-added-beforeload-event */
            beforeLoad: function( event, ui ) {
                ui.ajaxSettings.cache = false;
                if ( ui.tab.data( "loaded" ) ) {  event.preventDefault();  return;  } 
                ui.jqXHR.success(function() {   ui.tab.data( "loaded", true ); });
               },

            activate: function(event, ui) { setFocus1(event, ui) },
            beforeActivate: function(e, ui) { return showHideLocations(true); }
            });
            setupValidation(); //setup validation           
            fillOrgs(false); //setup Org dropdown and sp
            //Enable/Disable tab if orgtype is NOT customer
            @if (Model.showLocations)
            { @Html.Raw("showHideLocations(true)");
            }
        }); 
        
        function setFocus1(evt, ui) {
            // Objects available in the function context:
            /* HT: update as per - http://jqueryui.com/upgrade-guide/1.9/#tabs
            // Panel that is currently active, about to be deactivated
                ui.oldPanel
                // Tab associated with the currently active panel
                ui.oldTab
                // Panel that is about to be activated : CHANGED (previously panel)
                ui.newPanel
                // Tab associated with the panel that is about to be activated : CHANGED (previously tab)
                ui.newTab 
                // Index can be calculated if needed
                ui.newTab.index()
            */
            switch (ui.newTab.index()) {
                case 0: //Details
                    setFocus("Name"); break;
                case 1: //Locations
                    var OrgID = $("#OrgID").val();
                    @{string url = "~/User/UserLocation?UserId=" + Model.ID.ToString() + "&CustOrgId=";}
                    var url = '@Html.Raw(Url.Content(url))' + OrgID + "&OriCustOrgId=" + '@Model.OrgID';
                    //Special function to execute callback                    
                    reload(url, url, "#tbLocations");
                    //setFocus("[0].IsLinked"); - not needed any more, try here if needed in future
                    break;
            }
        }
        
        function showHideLocations(show) {            
            if (show) {
                var OrgID = $("#OrgID").val();
                var IsOrgTypeCustomer = ($("#OrgType").val() == '@((int)OrgService.OrgType.Customer)');
                //Verify that a customer is selected
                show = show && IsOrgTypeCustomer && (OrgID != null && OrgID.length > 0);
            }
            //show/hide
            if (show) $("#tabs").tabs("enable", 1);
            else $("#tabs").tabs("disable", 1);            
         
            return show;//for tab select event
        }
        
        function showSalesperson()
        {
            var IsOrgTypeSales = ($("#RoleID").val() == '@((int)SecurityService.Roles.Sales)');
            var tdSP = $(".tdSalesperson");
            
            if(IsOrgTypeSales)  tdSP.show();
            else                tdSP.hide();
        }
        
        function LinkUnlinkLoc(chk){        
        var txt1 = chk.checked?"#LinkedLoc":"#UnlinkedLoc";
        var txt2 = chk.checked?"#UnlinkedLoc": "#LinkedLoc";
        // add only if it didn't exist & remove only if it exists
        if(chk.getAttribute("WasLinked").toLowerCase() != chk.checked.toString())
            $(txt1).val($(txt1).val() + "," + chk.value);
        //Empty the other textbox
        $(txt2).val($(txt2).val().replace("," + chk.value,""));
        }

        $('#frmUsr').submit(function () {            
            if($(this).valid())
            { try{DisableSubmitButtons(true);@*$.blockUI();*@}catch(e){}}
        });
</script>

@model CPM.Models.Master
@using CPM.Helper
@{ string onClickForCANCEL = " onclick='" + (Model.IsDeleted ? " if(confirmDelete(event))deleteTR(this)":
        "deleteTR(this)") + " ;return false;'";
    string onClickForDEL = " onclick='" + (Model.IsDeleted ? "deleteTR(this)":
        " if(confirmDelete(event))deleteTR(this)") + " ;return false;'";    
    
    string trClass = Model.IsDeleted?"deletedTR":"deletedTR_NO";   
    string trNewDspStyle = Model.IsAdded?"":"none";
    string tr = "<tr class=" + trClass + " >";
    string trNew = "<tr id=\"trAddNew\" name=\"trAddNew\" style=\"display:" + trNewDspStyle +"\">";
}
<span></span>
@if (Model.LastModifiedBy != Defaults.Integer){ @Html.Raw(tr) } else { @Html.Raw(trNew) }
@*START : This is required only if the record has 'CanDelete = 1'
 Make sure these 3 checks are right before the delete image which is triggering the event *@   
   <td align="center">
       @Html.CheckBoxFor(model => model.IsAdded, new { @style = "display:none" })
       @Html.CheckBoxFor(model => model.IsDeleted,new { @style = "display:none" })
       @Html.CheckBoxFor(model => model.IsUpdated, new { @style = "display:none" })
       @if (Model.CanDelete){ 
           if (!(Model.LastModifiedBy == 0)){@*Need parent to be able to toggling image*@       
           <span>@Html.Raw(string.Format((Model.IsDeleted ? Defaults.cancelImgOnly : Defaults.delImgOnly), onClickForDEL))@Html.Raw(string.Format((Model.IsDeleted ? Defaults.delImgOnly : Defaults.cancelImgOnly), " style='display:none' " + onClickForCANCEL))</span>
           }else{ @Html.Raw(string.Format(Defaults.cancelImgOnly, "onclick=\"showHideNew(false,this);\"")) }
       } 
   @Html.HiddenFor(model => model.ID)
   </td>
@*END : This is required only if the record has 'CanDelete = 1'*@
   <td>
       @Html.CustomTextBoxFor(model => model.Title, new { @style = "width:99%", @class = "required" })@Html.ValidationMessageFor(model => model.Title)@Html.HiddenFor(model => model.TitleOLD)@Html.ValidationSummary(true)
   </td>   
   @* Kept for future //HT: Special case for Master Defect
       if (_Session.MasterTbl.HasValue && _Session.MasterTbl.Value == CPM.Services.MasterService.Table.Defect){ 
   <td>
       @Html.TextBoxFor(model => model.Category, new {@style="width:99%" })@Html.ValidationMessageFor(model => model.Category)
   </td>}
     //HT: Special case for Master Defect *@
   <td  style="display:none">
       @Html.TextBoxFor(model => model.SortOrder, new { @style = "width:99%" })@Html.ValidationMessageFor(model => model.SortOrder)@Html.HiddenFor(model => model.SortOrderOLD)
   </td>
   <td>
       @Html.HiddenFor(model => model.LastModifiedBy)@Model.LastModifiedByVal@Html.HiddenFor(model => model.LastModifiedByVal)
   </td>
   <td align="center">
       @Html.Hidden("LastModifiedDate", Model.LastModifiedDate.ToString("dd-MMM-yyyy hh:mm:ss"))@Model.LastModifiedDate.ToString(Defaults.dtFormat, Defaults.ci)
     @*<%= Model.CanDelete.ToString() %>*@ @Html.HiddenFor(model => model.CanDelete)
   </td>   
</tr>